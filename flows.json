[
    {
        "id": "94a15dd7d3812aaa",
        "type": "tab",
        "label": "Dashboard Curso",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "df01ad0d43f0b640",
        "type": "tab",
        "label": "Principal",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e68a1fdf9004451e",
        "type": "tab",
        "label": "Modbus",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e0798ddf80f0d483",
        "type": "tab",
        "label": "Move",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "0cfef771f1ee3ea9",
        "type": "tab",
        "label": "WRITE CSV",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "4c109387e4051a53",
        "type": "tab",
        "label": "RED CSV",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "afe2f132f23e762b",
        "type": "tab",
        "label": "Servidor NR",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "626fd640a4a3adf4",
        "type": "tab",
        "label": "MQTT",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9c33afc00fb3e4cb",
        "type": "tab",
        "label": "Link in/out/call",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2725b16a011185cd",
        "type": "tab",
        "label": "link out otro flow",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "379e256af7151976",
        "type": "tab",
        "label": "Flujo 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e261e132aec57fdf",
        "type": "tab",
        "label": "PLC HORNER",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e1f826ba93e8c649",
        "type": "tab",
        "label": "Variables de entorno",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "071916912d54373f",
        "type": "tab",
        "label": "Correo con CSV",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1aa4728872baf1e1",
        "type": "tab",
        "label": "Whatssapp",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "a2e24b83dda85699",
        "type": "subflow",
        "name": "Formato timestamp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 140,
                "wires": [
                    {
                        "id": "445ccc3a2e12ff88"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 140,
                "wires": [
                    {
                        "id": "07bc56f941fa4249",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a63f082dd65bb372",
        "type": "subflow",
        "name": "Obtener valor real de energia con variab de entorno",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 120,
                "wires": [
                    {
                        "id": "2e44864b19054b90"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 120,
                "wires": [
                    {
                        "id": "45a0e2a817d4f8f1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Function code",
                "type": "str",
                "value": ""
            },
            {
                "name": "UnitD",
                "type": "str",
                "value": ""
            },
            {
                "name": "Adress",
                "type": "str",
                "value": ""
            },
            {
                "name": "Quantity",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b03c7ea2def97f1e",
        "type": "subflow",
        "name": "Detector de archivos",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 240,
                "wires": [
                    {
                        "id": "0b6cc26a59b9ae4f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 240,
                "wires": [
                    {
                        "id": "c0e1ebfcaa7f1369",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NombredelArchivo",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8d6f828e8320d59d",
        "type": "subflow",
        "name": "Valor acendente y descendente",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 320,
                "y": 320,
                "wires": [
                    {
                        "id": "8587f4ea363f3b5a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 320,
                "wires": [
                    {
                        "id": "8587f4ea363f3b5a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c9c3febba9a89c85",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Mensajes de falla",
        "style": {
            "label": true,
            "stroke": "#ffC000"
        },
        "nodes": [
            "6561a231685701a0",
            "8963f3cf2df64254",
            "e35b5ea8a2198242",
            "28614df0e98cb96b",
            "3768461cac34f58b",
            "3ddd5fe38442ad38",
            "db86e6a650c54ae8",
            "1df97dbbd11033fe",
            "9aee1c6fd7f2a625"
        ],
        "x": 54,
        "y": 1779,
        "w": 672,
        "h": 162
    },
    {
        "id": "440f863fc6381d07",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Alarma - Consistencia  TQ2",
        "style": {
            "label": true
        },
        "nodes": [
            "66804d9e656536e0",
            "6c40a60010a73fe4",
            "c433021a8c7c5b4a",
            "37058a483bcf35e5",
            "d202be309eca647a",
            "f74435c5907020e2",
            "bdc99e3e1f9389e6",
            "d507bdc6706e51ca",
            "02e667abf849c490",
            "515aebcec1b871f5",
            "c2e99d994ed06802",
            "3ae6d3240d6991c5",
            "44b89123db8cadcd",
            "191237e9151d48b7",
            "191183c1024f92b6",
            "bdb4712be7fe48ce",
            "29b11beb6d562f0a",
            "5fae114ab90c8c61",
            "b3078b410e1c1840"
        ],
        "x": 54,
        "y": 1979,
        "w": 1052,
        "h": 322
    },
    {
        "id": "d9f9163d6acf80a4",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Alarma - Humedad",
        "style": {
            "label": true
        },
        "nodes": [
            "3b7d8f08b447b84b",
            "85a26c8485a17b60",
            "0066b7d3bf3caed2",
            "640f86e353dcda21",
            "bd19e6ca647fec79",
            "1cc59ef050b666ad",
            "1baf3bcc0bc50ef0",
            "8fba470119079d68",
            "5a96f424cca56c60"
        ],
        "x": 54,
        "y": 2319,
        "w": 892,
        "h": 182
    },
    {
        "id": "2b812ba67e357aaf",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Alarma - Bomba",
        "style": {
            "label": true
        },
        "nodes": [
            "42b615c6f42b2578",
            "e1b5a8966a8b3c92"
        ],
        "x": 54,
        "y": 2519,
        "w": 452,
        "h": 82
    },
    {
        "id": "f6065db452627f49",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "visualización pestaña de pastas",
        "style": {
            "label": true,
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "color": "#000000"
        },
        "nodes": [
            "42ad21beb60f83c7",
            "2cc10754ef8ef6b6",
            "af1725dda1769fee",
            "dbafb75cc8837a6e",
            "25933bebe3a262a1",
            "114f26b4533b122f",
            "ec139b08dc926de7",
            "6f9e5dc819df01a3",
            "5b8a992bf5cc99a7",
            "304bb6f4d055aa69",
            "de6238396bb3fc0d",
            "88791931703fa530"
        ],
        "x": 34,
        "y": 19,
        "w": 562,
        "h": 202
    },
    {
        "id": "5034021e1faef235",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Obtención de Timestamp",
        "style": {
            "label": true,
            "stroke": "#6f2fa0",
            "fill": "#dbcbe7",
            "color": "#000000"
        },
        "nodes": [
            "655e5af2ad4dc86d",
            "80f17f4c1d060f5f",
            "9924d4f84578e3a1",
            "e66d9618f4caffb3"
        ],
        "x": 14,
        "y": 19,
        "w": 912,
        "h": 82
    },
    {
        "id": "fc339c3f2d17446c",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Enviar y recibir correo",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "10cfadc7692aea57",
            "3e06d5c77af71f1a",
            "057bab2507e6edde",
            "f40a3cb88f89f0b9",
            "5bdec1d00dac1a7e",
            "a3a47739dd06dbc2",
            "4718aa95f0a69884",
            "ff313b64ba2ed64e",
            "972725fdbc0d1eda",
            "048fbade55f8dd3e",
            "72cac3bd7fda21ab",
            "4c68f090941f53a6",
            "ed20e2855b9135bc",
            "867ac0e57a7521fd",
            "9c44aeda91abaee8",
            "88807d531d294627"
        ],
        "x": 14,
        "y": 119,
        "w": 1272,
        "h": 222
    },
    {
        "id": "62d3dfe939d4c16d",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Señales entrada del PLC Horner",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "61b67a9206c4a081",
            "9c898ed3b67baba9",
            "2d117c255fcb7fbe",
            "3c0fce7d12910924",
            "c257763ef562cabd",
            "ff62cc80a1ded677"
        ],
        "x": 24,
        "y": 539,
        "w": 982,
        "h": 162
    },
    {
        "id": "6dfd4712f84f3146",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Niveles de tanques",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "02d7b1b54cf77b8f",
            "6899149e99098ed3",
            "d9acc6581003f885",
            "812a09bb157ea30e",
            "bb81b03bb8bdaecf",
            "c2eb941111971741",
            "3f545278d025dcf7",
            "3504891922795eb2"
        ],
        "x": 34,
        "y": 239,
        "w": 872,
        "h": 222
    },
    {
        "id": "3146867064a8c7f5",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Señal salida al PLC Horner",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0491c436757f599b",
            "f89f59c56cb3be7e",
            "68db541fc3da821f"
        ],
        "x": 34,
        "y": 739,
        "w": 452,
        "h": 142
    },
    {
        "id": "f626fac560c1df58",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Alarma Nivel Tanque #1 elevado",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "54a1bbc424a1ed56",
            "4db3eb3dd25f2bfd",
            "a2e804c808a11bf5",
            "ac728b59d270d12c",
            "9af7567bd25cfe23",
            "f34b238debdfd853"
        ],
        "x": 34,
        "y": 1299,
        "w": 1092,
        "h": 142
    },
    {
        "id": "0f93b4b24a237081",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Registro de alarmas en CSV",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "937199a81abcab6d",
            "1f4c252e86b14fe8",
            "2b51b05b335b86ee",
            "e08792b22227fbb2",
            "70e958cf7507283a",
            "cf32bb1458337e14",
            "872f6e1266257aa2",
            "b3f92fb7ba10413f",
            "3186db753d5470dd"
        ],
        "x": 24,
        "y": 1639,
        "w": 1482,
        "h": 142
    },
    {
        "id": "5c8ca2b96a435bf0",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Alarma consistencia Tanque #2",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e3c0002b1286227b",
            "5349c2768cd95f19",
            "946ec3e4cb40803b",
            "df35f11adf9fd732",
            "5baf4348dd5d62ca",
            "5f2acd1c59475a9c",
            "b29fa65c0e5378bb",
            "8515b9218628de35",
            "3181e7d56510fe75",
            "4f5408bb26b4057b",
            "4ad333b136627bcb",
            "6a5b349f5fc29756",
            "dcd00a97703a2af8"
        ],
        "x": 34,
        "y": 899,
        "w": 1382,
        "h": 222
    },
    {
        "id": "87b1dae14414d730",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Niveles de consistencia",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4b9c5d96b4a2173f",
            "b319484505e061cc",
            "68f9120b4c97f83c",
            "f49d68e91c12a1aa",
            "0f601717f26d8c54",
            "ca4034df7dc696a7",
            "aa04b55ecd7c535d",
            "0751b80ba44998c8",
            "75ef21d1c72c8b46",
            "768930b1962d6db6",
            "d6de62c3f6ca17de"
        ],
        "x": 34,
        "y": 479,
        "w": 852,
        "h": 202
    },
    {
        "id": "8dd3fbfc13f66149",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Tabla alarmas consistencias",
        "style": {
            "label": true,
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "color": "#000000"
        },
        "nodes": [
            "c33bac80868c9525",
            "a63fbb9eedcf9ccf",
            "9c5a09b4339d6e95",
            "5c57ab90da69465d"
        ],
        "x": 34,
        "y": 699,
        "w": 792,
        "h": 82
    },
    {
        "id": "c5e5199fdebd6c38",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Secadores",
        "style": {
            "label": true
        },
        "nodes": [
            "56e8863f7020be18",
            "056a0f6ffc3afb01",
            "d540dad272c12a15",
            "b8630ac61bdb8252",
            "6c1c2e7f2d8269bd",
            "c4e9285406b6ced7",
            "c3d8690ec107b5f8",
            "543b771a0498912a",
            "3fa04eeb3839a6fc",
            "3217d9de6384d5f7",
            "6eeaa6164191e613",
            "e7a47083b407e57a",
            "855acaa7d914dc93",
            "70bc2c24b04ba002",
            "9f923d2668dd6b3e"
        ],
        "x": 54,
        "y": 1339,
        "w": 592,
        "h": 422
    },
    {
        "id": "15d26398254c80a3",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Estado equipos pastas",
        "style": {
            "label": true
        },
        "nodes": [
            "56cc34c611e3aa19",
            "bbc055afb7ab74bf",
            "ccc3ab9c27d9f9c3",
            "be5e86de6778c479",
            "45110b512d425f1c",
            "d8a8926796942a72",
            "930804d361e453ef",
            "237cf5b6dd701659",
            "e50d82ea710e3a40",
            "09f8067824d8d03f",
            "f690d89eb7401423",
            "2c97575a14f45ee9",
            "8a438bdd41d36a99",
            "7be85de3d853e87b",
            "418608bc1b787d42",
            "c487a1c47110ca2e",
            "c5b6fa5050879d3f"
        ],
        "x": 54,
        "y": 799,
        "w": 572,
        "h": 522
    },
    {
        "id": "17ce7ab3d044649d",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Registro nivel del tanque #1 en CSV",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4eb0938687c8c560",
            "4972ee9b9c40b5e5",
            "1b993da54b4e9166",
            "b1b8a8686e155fec",
            "f4762468576daf7b",
            "b057d5f2803b499c",
            "e2adc4c9636ed2c8",
            "9bc17c1b4f2503d6",
            "8093331192bba607"
        ],
        "x": 24,
        "y": 1479,
        "w": 1482,
        "h": 142
    },
    {
        "id": "da1d1e789bae6232",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Nivel tanque #1",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a23d0522d8b6a586",
            "bde3cc558683b9a2",
            "a542d8680bbab8ea",
            "bedc607dd54db9f0",
            "0a43e61368b1031d",
            "e075028fb4af1e5f",
            "c3f8954b1c3091e0",
            "ba8e599b5b121c36",
            "57ee5dfc6ee8001e"
        ],
        "x": 34,
        "y": 1139,
        "w": 1492,
        "h": 142
    },
    {
        "id": "2f5ccb39f30997be",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Directorio de correos electrónicos guardados",
        "style": {
            "label": true,
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "color": "#000000"
        },
        "nodes": [
            "e8636187d7d8bb5c",
            "3732b89e13797f72",
            "3d4057063f8bb9ac",
            "b526c5663e5794dc",
            "a7388215d22f825f",
            "048fef09af4a6272",
            "71f4e662406c25a7",
            "b6da20b75dffe46d",
            "6516a6ae23e6cdc8",
            "1e79e40631fb0990",
            "4642ae51a946d2e6",
            "c8a13181da10c15c"
        ],
        "x": 54,
        "y": 2719,
        "w": 582,
        "h": 202
    },
    {
        "id": "8eb1cd980445347c",
        "type": "group",
        "z": "94a15dd7d3812aaa",
        "name": "Numeros telefonicos guardados",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "78290e82c02a76e6",
            "402f8d4563a9c04e",
            "cf655c22b8a7b277",
            "68aae23c159191dd",
            "0261e5f0832a21a3",
            "f0b58fc51d318315",
            "450c3ef2b47a8f91",
            "c4110405b666149c",
            "70503f8072498382",
            "86e631f0fc02ab7e",
            "86e5c34d57e7fb11",
            "37e2f641954d6353",
            "201a2824320cfc42"
        ],
        "x": 64,
        "y": 2939,
        "w": 642,
        "h": 202
    },
    {
        "id": "87041afa1ce3b835",
        "type": "group",
        "z": "df01ad0d43f0b640",
        "name": "Mensajes a dispositivos",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c417434caa50f07f",
            "b4fbc7cdd02c7a76",
            "400ae784fb5921b0",
            "adb2d9b421e90ad5",
            "d2bd39db49d9f67d",
            "5f28d32d1ee192e3"
        ],
        "x": 14,
        "y": 359,
        "w": 712,
        "h": 162
    },
    {
        "id": "f6902d71a09d8152",
        "type": "modbus-client",
        "name": "Modbus_slave",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.1.10",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "0af5ac84042856c1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "https://test.mosquitto.org/",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2320dcfca321090f",
        "type": "global-config",
        "name": "global-config",
        "env": []
    },
    {
        "id": "b9fcabccfa99d4f5",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "Luis"
    },
    {
        "id": "f3311352aada9d8e",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "605a6c88abef991c",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#0c7334",
            "primary": "#000fe6",
            "bgPage": "#ffffff",
            "groupBg": "#ffffff",
            "groupOutline": "#000000"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px",
            "density": "default"
        }
    },
    {
        "id": "3b751ac14c789b6c",
        "type": "ui-page",
        "name": "Configuración de Alarmas y Reportes",
        "ui": "f3311352aada9d8e",
        "path": "/configalarmas",
        "icon": "alarm-light",
        "layout": "grid",
        "theme": "605a6c88abef991c",
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "d076490343e0472e",
        "type": "ui-group",
        "name": "Telegram",
        "page": "3b751ac14c789b6c",
        "width": "3",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "85d3c3f41009d0f9",
        "type": "ui-group",
        "name": "Correo Electrónico",
        "page": "3b751ac14c789b6c",
        "width": "3",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "e76ae94a4bfa84af",
        "type": "ui-group",
        "name": "Alarma-Consistencia TQ #2",
        "page": "3b751ac14c789b6c",
        "width": "4",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "9b27daed1eecdbab",
        "type": "ui-group",
        "name": "Alarma-Humedad",
        "page": "3b751ac14c789b6c",
        "width": "4",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3db01b32f4126b59",
        "type": "ui-group",
        "name": "Alarma-Bomba",
        "page": "3b751ac14c789b6c",
        "width": "4",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "74eccb330ec6f381",
        "type": "ui-page",
        "name": "Pastas",
        "ui": "f3311352aada9d8e",
        "path": "/Home",
        "icon": "car-coolant-level",
        "layout": "grid",
        "theme": "605a6c88abef991c",
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "09e3cdf516d23c12",
        "type": "ui-group",
        "name": "Niveles de tanques",
        "page": "74eccb330ec6f381",
        "width": "6",
        "height": "6",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "092d761680131230",
        "type": "ui-group",
        "name": "Alarmas de Consistencia",
        "page": "74eccb330ec6f381",
        "width": "6",
        "height": "6",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "876a1abaa6415201",
        "type": "ui-page",
        "name": "Secadores",
        "ui": "f3311352aada9d8e",
        "path": "/page5",
        "icon": "fire-circle",
        "layout": "grid",
        "theme": "605a6c88abef991c",
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "4a0d1ccff6607e24",
        "type": "ui-group",
        "name": "Cuarta sección de vapor",
        "page": "876a1abaa6415201",
        "width": "6",
        "height": "6",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6f4b3c73ce9cede1",
        "type": "ui-group",
        "name": "Consistencias",
        "page": "74eccb330ec6f381",
        "width": "6",
        "height": "6",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "bc1a2e8073f733e7",
        "type": "ui-group",
        "name": "Visualizar",
        "page": "74eccb330ec6f381",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0bb5cb43c75b3ae3",
        "type": "ui-group",
        "name": "Equipos encendidos",
        "page": "74eccb330ec6f381",
        "width": "6",
        "height": "6",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "96088c75d72e4669",
        "type": "telegram bot",
        "botname": "BotCEYPABASA_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "07bc56f941fa4249",
        "type": "function",
        "z": "a2e24b83dda85699",
        "name": "Obtener formato timestamp",
        "func": "const fecha = new Date();\n\nconst anio = fecha.getFullYear();\nconst mes = ('0' + (fecha.getMonth() + 1)).slice(-2);\nconst dia = ('0' + (fecha.getDay()+15)).slice(-2);\nconst hora = ('0' + (fecha.getHours())).slice(-2);\nconst minuto = ('0' + (fecha.getMinutes())).slice(-2);\nconst segundo = ('0' + (fecha.getSeconds())).slice(-2);\n\nlet timestamp = anio  + '-' + mes +'-' + dia + '  ' + hora + ':' + minuto + ':' + segundo;\nflow.set(\"timestamp\", timestamp);\nmsg.payload = timestamp;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "445ccc3a2e12ff88",
        "type": "trigger",
        "z": "a2e24b83dda85699",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "07bc56f941fa4249"
            ]
        ]
    },
    {
        "id": "6c1108f92d3c3eb8",
        "type": "modbus-flex-getter",
        "z": "a63f082dd65bb372",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 590,
        "y": 120,
        "wires": [
            [],
            [
                "45a0e2a817d4f8f1"
            ]
        ]
    },
    {
        "id": "2e44864b19054b90",
        "type": "function",
        "z": "a63f082dd65bb372",
        "name": "Lectura",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': env.get(\"Function code\"), 'unitid': env.get(\"UnitiD\"), \n    'address': env.get(\"Adress\"), \n    'quantity': env.get(\"Quantity\")\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 120,
        "wires": [
            [
                "6c1108f92d3c3eb8"
            ]
        ]
    },
    {
        "id": "45a0e2a817d4f8f1",
        "type": "function",
        "z": "a63f082dd65bb372",
        "name": "Convertir valor real",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst temp=buf[0];\nbuf[0] = buf[1];\nbuf[1] = temp;\nconst temp2 = buf[2];\nbuf[2] = buf[3];\nbuf[3] = temp2;\n\n\nconst value = buf.readFloatLE();\n\nmsg.valor_real = value;\nmsg.valor_real = value.toFixed(2);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9915cb815e783db2",
        "type": "fs-file-lister",
        "z": "b03c7ea2def97f1e",
        "name": "",
        "start": "C:\\Users\\luish\\OneDrive\\Escritorio\\Archivos de prueba",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": false,
        "depth": 0,
        "stat": true,
        "showWarnings": true,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "c0e1ebfcaa7f1369"
            ]
        ]
    },
    {
        "id": "0b6cc26a59b9ae4f",
        "type": "function",
        "z": "b03c7ea2def97f1e",
        "name": "function 39",
        "func": "let archivo = env.get(\"NombredelArchivo\");\n\nmsg.payload = {\n    \"pattern\" : archivo\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "9915cb815e783db2"
            ]
        ]
    },
    {
        "id": "c0e1ebfcaa7f1369",
        "type": "function",
        "z": "b03c7ea2def97f1e",
        "name": "function 40",
        "func": "let archivo = env.get(\"NombredelArchivo\");\n\nif ( msg.payload.name == archivo){\n    msg.archivo = true;\n    msg.size = msg.payload.stat.size;\n}\nelse{\n    msg.archivo = false;\n    msg.size = 0;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8587f4ea363f3b5a",
        "type": "function",
        "z": "8d6f828e8320d59d",
        "name": "function 51",
        "func": "//Mensajes variables para prueba\nlet valor = global.get('valorx') || 20;\nlet subiendo = global.get('subiendox');\n\n// Si 'subiendo' no está definido, inicializamos como verdadero\nif (subiendo === undefined) {\n    subiendo = true;\n}\n\n// Verificamos si debemos incrementar o decrementar\nif (subiendo) {\n    valor++;\n    if (valor >= 30) {\n        subiendo = false; // Cambiar dirección cuando llega a 90\n    }\n} else {\n    valor--;\n    if (valor <= 20) {\n        subiendo = true; // Cambiar dirección cuando llega a 20\n    }\n}\n\n// Guardamos los valores actualizados en el contexto de flujo\nglobal.set('valorx', valor);\nglobal.set('subiendox', subiendo);\n\nmsg.payload = global.get('valorx')\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6561a231685701a0",
        "type": "template",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h3><b>Falla en la bomba</b></h3>\n<p>Por favor revise posible filtraciones</p>\n",
        "output": "str",
        "x": 340,
        "y": 1820,
        "wires": [
            [
                "8963f3cf2df64254"
            ]
        ]
    },
    {
        "id": "8963f3cf2df64254",
        "type": "ui-notification",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "ui": "f3311352aada9d8e",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "0",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Aceptar",
        "allowConfirm": false,
        "confirmText": "",
        "raw": true,
        "className": "",
        "name": "Falla bomba",
        "x": 530,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "e35b5ea8a2198242",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1820,
        "wires": [
            [
                "6561a231685701a0"
            ]
        ]
    },
    {
        "id": "28614df0e98cb96b",
        "type": "template",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h3><b>Falla Humedad elevada</b></h3>\n<p>Por favor revise posible filtros</p>\n",
        "output": "str",
        "x": 340,
        "y": 1860,
        "wires": [
            [
                "3768461cac34f58b"
            ]
        ]
    },
    {
        "id": "3768461cac34f58b",
        "type": "ui-notification",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "ui": "f3311352aada9d8e",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "0",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Aceptar",
        "allowConfirm": false,
        "confirmText": "",
        "raw": true,
        "className": "",
        "name": "Falla Humedad elevada",
        "x": 570,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "3ddd5fe38442ad38",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1860,
        "wires": [
            [
                "28614df0e98cb96b"
            ]
        ]
    },
    {
        "id": "db86e6a650c54ae8",
        "type": "template",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h3><b>Falla temperatura elevada</b></h3>\n<p>Revisar sistema de refrigeración</p>\n<p>Temperatura  = {{payload}}</p>",
        "output": "str",
        "x": 340,
        "y": 1900,
        "wires": [
            [
                "1df97dbbd11033fe"
            ]
        ]
    },
    {
        "id": "1df97dbbd11033fe",
        "type": "ui-notification",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "ui": "f3311352aada9d8e",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "0",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Aceptar",
        "raw": true,
        "className": "",
        "name": "Falla Temperatura elevada",
        "x": 580,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "9aee1c6fd7f2a625",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c9c3febba9a89c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1900,
        "wires": [
            [
                "db86e6a650c54ae8"
            ]
        ]
    },
    {
        "id": "66804d9e656536e0",
        "type": "ui-switch",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Alarma consistencia tq #2",
        "label": "Activar/Desactivar",
        "group": "e76ae94a4bfa84af",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "alarm-light",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "alarm-light-off",
        "offcolor": "gray",
        "x": 610,
        "y": 2020,
        "wires": [
            [
                "6c40a60010a73fe4"
            ]
        ]
    },
    {
        "id": "3b7d8f08b447b84b",
        "type": "ui-switch",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "name": "Alarma humedad",
        "label": "Activar/Desactivar",
        "group": "9b27daed1eecdbab",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "alarm-light",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "alarm-light-off",
        "offcolor": "gray",
        "x": 610,
        "y": 2360,
        "wires": [
            [
                "85a26c8485a17b60"
            ]
        ]
    },
    {
        "id": "42b615c6f42b2578",
        "type": "ui-switch",
        "z": "94a15dd7d3812aaa",
        "g": "2b812ba67e357aaf",
        "name": "Alarma Bomba",
        "label": "Activar/Desactivar",
        "group": "3db01b32f4126b59",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "alarm-light",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "alarm-light-off",
        "offcolor": "gray",
        "x": 160,
        "y": 2560,
        "wires": [
            [
                "e1b5a8966a8b3c92"
            ]
        ]
    },
    {
        "id": "6c40a60010a73fe4",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "alarma_consistencia_tq2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "85a26c8485a17b60",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "alarma_humedad",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "e1b5a8966a8b3c92",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "2b812ba67e357aaf",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "alarma_bomba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "42ad21beb60f83c7",
        "type": "ui-switch",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "",
        "label": "Consistencias",
        "group": "bc1a2e8073f733e7",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "eye",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "eye-off",
        "offcolor": "",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "dbafb75cc8837a6e"
            ]
        ]
    },
    {
        "id": "2cc10754ef8ef6b6",
        "type": "ui-switch",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "",
        "label": "Niveles de tanques",
        "group": "bc1a2e8073f733e7",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "eye",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "eye-off",
        "offcolor": "",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "114f26b4533b122f"
            ]
        ]
    },
    {
        "id": "af1725dda1769fee",
        "type": "ui-switch",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "",
        "label": "Alarmas de Consistencia",
        "group": "bc1a2e8073f733e7",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "eye",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "eye-off",
        "offcolor": "",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "ec139b08dc926de7"
            ]
        ]
    },
    {
        "id": "c433021a8c7c5b4a",
        "type": "ui-text-input",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "group": "e76ae94a4bfa84af",
        "name": "valor max consistencia tq #2",
        "label": "Valor Max:",
        "order": 3,
        "width": "2",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 620,
        "y": 2080,
        "wires": [
            [
                "d202be309eca647a"
            ]
        ]
    },
    {
        "id": "37058a483bcf35e5",
        "type": "ui-button",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "group": "e76ae94a4bfa84af",
        "name": "",
        "label": "Aceptar",
        "order": 4,
        "width": "4",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 180,
        "y": 2140,
        "wires": [
            [
                "f74435c5907020e2",
                "191237e9151d48b7"
            ]
        ]
    },
    {
        "id": "d202be309eca647a",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "valor_max_consistencia_tq2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 2080,
        "wires": [
            [
                "515aebcec1b871f5"
            ]
        ]
    },
    {
        "id": "0066b7d3bf3caed2",
        "type": "ui-text-input",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "group": "9b27daed1eecdbab",
        "name": "valor max humedad",
        "label": "Valor Max:",
        "order": 3,
        "width": "2",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 610,
        "y": 2400,
        "wires": [
            [
                "bd19e6ca647fec79"
            ]
        ]
    },
    {
        "id": "640f86e353dcda21",
        "type": "ui-button",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "group": "9b27daed1eecdbab",
        "name": "",
        "label": "Aceptar",
        "order": 2,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 240,
        "y": 2460,
        "wires": [
            [
                "1cc59ef050b666ad"
            ]
        ]
    },
    {
        "id": "bd19e6ca647fec79",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "valor_max_humedad",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "f74435c5907020e2",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Definir Valor temperatura",
        "func": "let umbral_consistencia_tq2_max = flow.get(\"valor_max_consistencia_tq2\");\n\nif (umbral_consistencia_tq2_max != undefined){\n    msg.payload = umbral_consistencia_tq2_max;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2140,
        "wires": [
            [
                "02e667abf849c490"
            ]
        ]
    },
    {
        "id": "bdc99e3e1f9389e6",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Definir valor inicial",
        "func": "let umbral_consistencia_tq2_max = global.get(\"umbral_consistencia_tq2_max\");\n\nif (umbral_consistencia_tq2_max == undefined){\n    msg.payload = 0;\n    global.set(\"umbral_consistencia_tq2_max\",0);\n    return msg;\n}\nelse{\n    msg.payload = umbral_consistencia_tq2_max;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2080,
        "wires": [
            [
                "c433021a8c7c5b4a"
            ]
        ]
    },
    {
        "id": "d507bdc6706e51ca",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 2080,
        "wires": [
            [
                "bdc99e3e1f9389e6"
            ]
        ]
    },
    {
        "id": "02e667abf849c490",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "umbral_consistencia_tq2_max",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2140,
        "wires": [
            [
                "c433021a8c7c5b4a",
                "c2e99d994ed06802"
            ]
        ]
    },
    {
        "id": "1cc59ef050b666ad",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "name": "Definir Valor humedad",
        "func": "let umbral_humedad = flow.get(\"valor_max_humedad\");\n\nif(umbral_humedad != undefined){\n    msg.payload = umbral_humedad;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2460,
        "wires": [
            [
                "1baf3bcc0bc50ef0"
            ]
        ]
    },
    {
        "id": "1baf3bcc0bc50ef0",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "umbral_humedad",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 2460,
        "wires": [
            [
                "0066b7d3bf3caed2"
            ]
        ]
    },
    {
        "id": "8fba470119079d68",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "name": "Definir valor inicial",
        "func": "let umbral_humedad = global.get(\"umbral_humedad\");\n\nif(umbral_humedad == undefined){\n    msg.payload = 0;\n    global.set(\"umbral_humedad\",0);\n    return msg;\n}\nelse{\n    msg.payload = umbral_humedad;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2400,
        "wires": [
            [
                "0066b7d3bf3caed2"
            ]
        ]
    },
    {
        "id": "5a96f424cca56c60",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "d9f9163d6acf80a4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 2400,
        "wires": [
            [
                "8fba470119079d68"
            ]
        ]
    },
    {
        "id": "e8636187d7d8bb5c",
        "type": "ui-text-input",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "group": "85d3c3f41009d0f9",
        "name": "Dirección correo electrónico",
        "label": "Dirección correo electrónico",
        "order": 1,
        "width": "3",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "email",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 260,
        "y": 2760,
        "wires": [
            [
                "b526c5663e5794dc"
            ]
        ]
    },
    {
        "id": "3732b89e13797f72",
        "type": "ui-button",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "group": "85d3c3f41009d0f9",
        "name": "Agregar ",
        "label": "plus",
        "order": 4,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "plus",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 220,
        "y": 2800,
        "wires": [
            [
                "048fef09af4a6272"
            ]
        ]
    },
    {
        "id": "3d4057063f8bb9ac",
        "type": "ui-dropdown",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "group": "85d3c3f41009d0f9",
        "name": "",
        "label": "Seleccione una opción:",
        "tooltip": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": true,
        "x": 270,
        "y": 2880,
        "wires": [
            [
                "b6da20b75dffe46d"
            ]
        ]
    },
    {
        "id": "b526c5663e5794dc",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "correo_escrito",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "a7388215d22f825f",
        "type": "ui-button",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "group": "85d3c3f41009d0f9",
        "name": "Eliminar",
        "label": "Eliminar",
        "order": 3,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 220,
        "y": 2840,
        "wires": [
            [
                "71f4e662406c25a7"
            ]
        ]
    },
    {
        "id": "402f8d4563a9c04e",
        "type": "ui-text-input",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "group": "d076490343e0472e",
        "name": "Username",
        "label": "Username",
        "order": 1,
        "width": "3",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 250,
        "y": 2980,
        "wires": [
            [
                "0261e5f0832a21a3"
            ]
        ]
    },
    {
        "id": "cf655c22b8a7b277",
        "type": "ui-button",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "group": "d076490343e0472e",
        "name": "Agregar ",
        "label": "plus",
        "order": 4,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "plus",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 160,
        "y": 3020,
        "wires": [
            [
                "c4110405b666149c"
            ]
        ]
    },
    {
        "id": "68aae23c159191dd",
        "type": "ui-dropdown",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "group": "d076490343e0472e",
        "name": "",
        "label": "Seleccione una opción:",
        "tooltip": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": true,
        "x": 270,
        "y": 3100,
        "wires": [
            [
                "450c3ef2b47a8f91"
            ]
        ]
    },
    {
        "id": "0261e5f0832a21a3",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "numero_escrito",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "f0b58fc51d318315",
        "type": "ui-button",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "group": "d076490343e0472e",
        "name": "Eliminar",
        "label": "Eliminar",
        "order": 3,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 160,
        "y": 3060,
        "wires": [
            [
                "70503f8072498382"
            ]
        ]
    },
    {
        "id": "048fef09af4a6272",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "Agregar correo a la lista",
        "func": "let correo_agregar = flow.get(\"correo_escrito\");\nif(correo_agregar != undefined && correo_agregar != \"\"){\n    if(flow.get(\"array_correos\")== undefined){\n        let arr_correos = [];\n        arr_correos.push(correo_agregar);\n        flow.set(\"array_correos\", arr_correos);\n    }\n    else{\n        let arr_correos = flow.get(\"array_correos\");\n        arr_correos.push(correo_agregar);\n        flow.set(\"array_correos\", arr_correos);\n    }\nmsg.options = flow.get(\"array_correos\");\nmsg.payload = \"\";\nflow.set(\"correo_escrito\",\"\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2800,
        "wires": [
            [
                "c8a13181da10c15c"
            ]
        ]
    },
    {
        "id": "71f4e662406c25a7",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "Eliminar correo de la lista",
        "func": "let correo_eliminar = flow.get(\"correo_escrito\");\n\nif (correo_eliminar != undefined || correo_eliminar != \"\") {\n    if (flow.get(\"array_correos\") != undefined) {\n        let array = flow.get(\"array_correos\");\n\n        if (array.includes(correo_eliminar)){\n\n            let indice = array.indexOf(correo_eliminar);\n            array.splice(indice,1);\n            flow.set(\"array_correos\",array);\n        }\n \n    \n    msg.options = flow.get(\"array_correos\");\n    msg.payload = \"\";\n    flow.set(\"correo_escrito\", \"\");\n    return msg;\n    }\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2840,
        "wires": [
            [
                "1e79e40631fb0990"
            ]
        ]
    },
    {
        "id": "b6da20b75dffe46d",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "correo_seleccionado",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "450c3ef2b47a8f91",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "numero_seleccionado",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "c4110405b666149c",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "function 36",
        "func": "let numero_agregar = flow.get(\"numero_escrito\");\nif (numero_agregar != undefined && numero_agregar != \"\") {\n    if (flow.get(\"array_numeros\") == undefined) {\n        let arr_numeros= [];\n        arr_numeros.push(numero_agregar);\n        flow.set(\"array_numeros\", arr_numeros);\n    }\n    else {\n        let arr_numeros = flow.get(\"array_numeros\");\n        arr_numeros.push(numero_agregar);\n        flow.set(\"array_numeros\", arr_numeros);\n    }\n    msg.options = flow.get(\"array_numeros\");\n    msg.payload = \"\";\n    flow.set(\"numero_escrito\", \"\");\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3020,
        "wires": [
            [
                "86e5c34d57e7fb11",
                "201a2824320cfc42"
            ]
        ]
    },
    {
        "id": "70503f8072498382",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "function 37",
        "func": "let numero_eliminar = flow.get(\"numero_escrito\");\n\nif (numero_eliminar != undefined || numero_eliminar != \"\") {\n    if (flow.get(\"array_numeros\") != undefined) {\n        let array = flow.get(\"array_numeros\");\n\n        if (array.includes(numero_eliminar)) {\n\n            let indice = array.indexOf(numero_eliminar);\n            array.splice(indice, 1);\n            flow.set(\"array_numeros\", array);\n        }\n\n\n        msg.options = flow.get(\"array_numeros\");\n        msg.payload = \"\";\n        flow.set(\"numero_escrito\", \"\");\n        return msg;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3060,
        "wires": [
            [
                "86e631f0fc02ab7e"
            ]
        ]
    },
    {
        "id": "6516a6ae23e6cdc8",
        "type": "link in",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "link in 7",
        "links": [
            "1e79e40631fb0990",
            "c8a13181da10c15c"
        ],
        "x": 115,
        "y": 2880,
        "wires": [
            [
                "3d4057063f8bb9ac"
            ]
        ]
    },
    {
        "id": "1e79e40631fb0990",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "6516a6ae23e6cdc8",
            "4642ae51a946d2e6"
        ],
        "x": 595,
        "y": 2840,
        "wires": []
    },
    {
        "id": "4642ae51a946d2e6",
        "type": "link in",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "link in 8",
        "links": [
            "1e79e40631fb0990"
        ],
        "x": 95,
        "y": 2760,
        "wires": [
            [
                "e8636187d7d8bb5c"
            ]
        ]
    },
    {
        "id": "c8a13181da10c15c",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "2f5ccb39f30997be",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "6516a6ae23e6cdc8"
        ],
        "x": 595,
        "y": 2800,
        "wires": []
    },
    {
        "id": "dbafb75cc8837a6e",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "Definir Visualización",
        "func": "if (msg.payload == true){\n    msg.payload = {\n        groups: {\n            show: ['Nivel de Tanques y Consistencias:Consistencias']\n        }\n    }\n}\nelse{\n    msg.payload = {\n        groups:{\n            hide: ['Nivel de Tanques y Consistencias:Consistencias']\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 60,
        "wires": [
            [
                "25933bebe3a262a1"
            ]
        ]
    },
    {
        "id": "25933bebe3a262a1",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "13a87a95c74685d5"
        ],
        "x": 555,
        "y": 60,
        "wires": []
    },
    {
        "id": "02d7b1b54cf77b8f",
        "type": "ui-gauge",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "name": "Tanque #2",
        "group": "09e3cdf516d23c12",
        "order": 3,
        "width": "2",
        "height": "3",
        "gtype": "gauge-tank",
        "gstyle": "needle",
        "title": "Tanque #2",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#a8f5ff"
            },
            {
                "from": "15",
                "color": "#55dbec"
            },
            {
                "from": "35",
                "color": "#53b4fd"
            },
            {
                "from": "50",
                "color": "#2397d1"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "32",
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 770,
        "y": 380,
        "wires": []
    },
    {
        "id": "6899149e99098ed3",
        "type": "ui-gauge",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "name": "Tanque #1",
        "group": "09e3cdf516d23c12",
        "order": 4,
        "width": "2",
        "height": "3",
        "gtype": "gauge-tank",
        "gstyle": "needle",
        "title": "Tanque #1",
        "units": "°",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#a8f5ff"
            },
            {
                "from": "15",
                "color": "#55dbec"
            },
            {
                "from": "35",
                "color": "#53b4fd"
            },
            {
                "from": "50",
                "color": "#2397d1"
            },
            {
                "from": "80",
                "color": "#ffa50a"
            },
            {
                "from": "90",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "32",
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 770,
        "y": 340,
        "wires": []
    },
    {
        "id": "d9acc6581003f885",
        "type": "ui-gauge",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "name": "Tanque #4",
        "group": "09e3cdf516d23c12",
        "order": 2,
        "width": "2",
        "height": "3",
        "gtype": "gauge-tank",
        "gstyle": "needle",
        "title": "Tanque #4",
        "units": "°",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#a8f5ff"
            },
            {
                "from": "15",
                "color": "#55dbec"
            },
            {
                "from": "35",
                "color": "#53b4fd"
            },
            {
                "from": "50",
                "color": "#2397d1"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "32",
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 770,
        "y": 420,
        "wires": []
    },
    {
        "id": "812a09bb157ea30e",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "bb81b03bb8bdaecf",
                "c2eb941111971741",
                "3f545278d025dcf7"
            ]
        ]
    },
    {
        "id": "bb81b03bb8bdaecf",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "name": "PLC IA TQ#1",
        "func": "let valor = global.get('valor_tq1')\n\n// Enviar el valor actualizado en el payload\nmsg.payload = valor;\n\n//Mensaje para PLC Horner\n\n//msg.payload = global.get(\"Señales_de_entrada\");\n//msg.payload = msg.payload.data[2];\nmsg.topic = \"Tanque #1\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "6899149e99098ed3",
                "3504891922795eb2"
            ]
        ]
    },
    {
        "id": "c2eb941111971741",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "name": "PLC IA TQ#2",
        "func": "\n//Mensajes variables para prueba\nlet valor = global.get('valor_tq2') || 80;\nlet subiendo = flow.get('subiendo_tq2');\n\n// Si 'subiendo' no está definido, inicializamos como verdadero\nif (subiendo === undefined) {\n    subiendo = true;\n}\n\n// Verificamos si debemos incrementar o decrementar\nif (subiendo) {\n    valor++;\n    if (valor >= 90) {\n        subiendo = false; // Cambiar dirección cuando llega a 90\n    }\n} else {\n    valor--;\n    if (valor <= 80) {\n        subiendo = true; // Cambiar dirección cuando llega a 20\n    }\n}\n\n// Guardamos los valores actualizados en el contexto de flujo\nglobal.set('valor_tq2', valor);\nflow.set('subiendo_tq2', subiendo);\n\n// Enviar el valor actualizado en el payload\nmsg.payload = valor;\n\n//Mensaje para PLC Horner\n\n\n//msg.payload = global.get(\"Señales_de_entrada\");\n//msg.payload = msg.payload.data[3];\nmsg.topic = \"Tanque 2\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 380,
        "wires": [
            [
                "02d7b1b54cf77b8f",
                "3504891922795eb2"
            ]
        ]
    },
    {
        "id": "3f545278d025dcf7",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "name": "PLC IA TQ#4",
        "func": "\n//Mensajes variables para prueba\nlet valor = global.get('valor_tq4') || 60;\nlet subiendo = flow.get('subiendo_tq4');\n\n// Si 'subiendo' no está definido, inicializamos como verdadero\nif (subiendo === undefined) {\n    subiendo = true;\n}\n\n// Verificamos si debemos incrementar o decrementar\nif (subiendo) {\n    valor++;\n    if (valor >= 80) {\n        subiendo = false; // Cambiar dirección cuando llega a 90\n    }\n} else {\n    valor--;\n    if (valor <= 60) {\n        subiendo = true; // Cambiar dirección cuando llega a 20\n    }\n}\n\n// Guardamos los valores actualizados en el contexto de flujo\nglobal.set('valor_tq4', valor);\nflow.set('subiendo_tq4', subiendo);\n\n\n// Enviar el valor actualizado en el payload\nmsg.payload = valor;\n\n//Mensaje para PLC Horner\n\n\n//msg.payload = global.get(\"Señales_de_entrada\");\n//msg.payload = msg.payload.data[6];\nmsg.topic = \"Tanque #4\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 420,
        "wires": [
            [
                "d9acc6581003f885",
                "3504891922795eb2"
            ]
        ]
    },
    {
        "id": "3504891922795eb2",
        "type": "ui-chart",
        "z": "94a15dd7d3812aaa",
        "g": "6dfd4712f84f3146",
        "group": "09e3cdf516d23c12",
        "name": "",
        "label": "Nivel de tanques",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "yAxisLabel": "",
        "yAxisProperty": "",
        "ymin": "0",
        "ymax": "100",
        "action": "append",
        "stackSeries": false,
        "pointShape": "line",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "4",
        "className": "",
        "x": 790,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4b9c5d96b4a2173f",
        "type": "ui-gauge",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "CCS TQ2",
        "group": "6f4b3c73ce9cede1",
        "order": 2,
        "width": "2",
        "height": "3",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "CCS TQ2",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "2",
                "color": "#ffc800"
            },
            {
                "from": "3",
                "color": "#00ff00"
            },
            {
                "from": "4",
                "color": "#ffc800"
            },
            {
                "from": "6",
                "color": "#ea5353"
            }
        ],
        "min": "0",
        "max": "8",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "32",
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 800,
        "y": 560,
        "wires": []
    },
    {
        "id": "b319484505e061cc",
        "type": "ui-gauge",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "CCS TQ3",
        "group": "6f4b3c73ce9cede1",
        "order": 3,
        "width": "2",
        "height": "3",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "CCS TQ3",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "2",
                "color": "#ffc800"
            },
            {
                "from": "3",
                "color": "#00ff00"
            },
            {
                "from": "4",
                "color": "#ffc800"
            },
            {
                "from": "6",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "10",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "32",
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 800,
        "y": 600,
        "wires": []
    },
    {
        "id": "68f9120b4c97f83c",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "f49d68e91c12a1aa",
                "0f601717f26d8c54",
                "ca4034df7dc696a7"
            ]
        ]
    },
    {
        "id": "f49d68e91c12a1aa",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "CCS TQ2",
        "func": "\n//Mensajes variables para prueba\nmsg.payload = global.get(\"Consistencia_tanque#2\");\nlet resultado = msg.payload;\nresultado = Math.floor(resultado * 100) / 100;\nmsg.payload = resultado;\n\n//Mensaje para PLC Horner\n//msg.payload = global.get(\"Señales_de_entrada\");\n//msg.payload = msg.payload.data[9];\nmsg.topic = \"CCS TQ2\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 560,
        "wires": [
            [
                "aa04b55ecd7c535d",
                "0751b80ba44998c8"
            ]
        ]
    },
    {
        "id": "0f601717f26d8c54",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "CCS TQ3",
        "func": "//Mensajes variables para prueba\nmsg.payload = global.get(\"Consistencia_tanque#2\");\nlet resultado = msg.payload;\nresultado = Math.floor((resultado+1) * 100) / 100;\nmsg.payload = resultado;\n\n//Mensaje para PLC Horner\n\n//msg.payload = global.get(\"Señales_de_entrada\");\n//msg.payload = msg.payload.data[10];\nmsg.topic = \"CCS TQ3\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 600,
        "wires": [
            [
                "aa04b55ecd7c535d",
                "75ef21d1c72c8b46"
            ]
        ]
    },
    {
        "id": "ca4034df7dc696a7",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "CCS TQ5",
        "func": "//Mensajes variables para prueba\nmsg.payload = global.get(\"Consistencia_tanque#2\");\nlet resultado = msg.payload;\nresultado = Math.floor((resultado-1) * 100) / 100;\nmsg.payload = resultado;\n\n//Mensaje para PLC Horner\n\n//msg.payload = global.get(\"Señales_de_entrada\");\n//msg.payload = msg.payload.data[11];\nmsg.topic = \"CCS TQ5\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 640,
        "wires": [
            [
                "aa04b55ecd7c535d",
                "768930b1962d6db6"
            ]
        ]
    },
    {
        "id": "c33bac80868c9525",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "8dd3fbfc13f66149",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "9c5a09b4339d6e95"
            ]
        ]
    },
    {
        "id": "a63fbb9eedcf9ccf",
        "type": "ui-table",
        "z": "94a15dd7d3812aaa",
        "g": "8dd3fbfc13f66149",
        "group": "092d761680131230",
        "name": "",
        "label": "text",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": "6",
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "selectionType": "none",
        "columns": [
            {
                "title": "timestamp",
                "key": "timestamp",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "descripcion",
                "key": "descripcion",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "variable",
                "key": "variable",
                "type": "text",
                "width": "",
                "align": "start"
            },
            {
                "title": "prioridad",
                "key": "prioridad",
                "type": "text",
                "width": "",
                "align": "start"
            }
        ],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "x": 750,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "9c5a09b4339d6e95",
        "type": "file in",
        "z": "94a15dd7d3812aaa",
        "g": "8dd3fbfc13f66149",
        "name": "Buscar archivo CSV",
        "filename": "C:\\Users\\luish\\OneDrive\\Escritorio\\Archivos de prueba\\alarmas.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 740,
        "wires": [
            [
                "5c57ab90da69465d"
            ]
        ]
    },
    {
        "id": "5c57ab90da69465d",
        "type": "csv",
        "z": "94a15dd7d3812aaa",
        "g": "8dd3fbfc13f66149",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 570,
        "y": 740,
        "wires": [
            [
                "a63fbb9eedcf9ccf"
            ]
        ]
    },
    {
        "id": "56e8863f7020be18",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "group": "4a0d1ccff6607e24",
        "order": 2,
        "width": "2",
        "height": "2",
        "name": "Diferencial de presion secador #13",
        "label": "Diferencial de presion secador #13 [bar]:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 480,
        "y": 1520,
        "wires": []
    },
    {
        "id": "056a0f6ffc3afb01",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 150,
        "y": 1520,
        "wires": [
            [
                "56e8863f7020be18"
            ]
        ]
    },
    {
        "id": "d540dad272c12a15",
        "type": "comment",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "Diferenciales de presión",
        "info": "",
        "x": 180,
        "y": 1460,
        "wires": []
    },
    {
        "id": "aa04b55ecd7c535d",
        "type": "ui-chart",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "group": "6f4b3c73ce9cede1",
        "name": "",
        "label": "Consistencias",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "yAxisLabel": "",
        "yAxisProperty": "",
        "ymin": "0",
        "ymax": "8",
        "action": "append",
        "stackSeries": false,
        "pointShape": "line",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": "4",
        "className": "",
        "x": 760,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "515aebcec1b871f5",
        "type": "debug",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "debug 72",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 2080,
        "wires": []
    },
    {
        "id": "c2e99d994ed06802",
        "type": "debug",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "debug 73",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 2140,
        "wires": []
    },
    {
        "id": "114f26b4533b122f",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "Definir Visualización",
        "func": "if (msg.payload == true){\n    msg.payload = {\n        groups: {\n            show: ['Nivel de Tanques y Consistencias:Niveles de tanques']\n        }\n    }\n}\nelse{\n    msg.payload = {\n        groups:{\n            hide: ['Nivel de Tanques y Consistencias:Niveles de tanques']\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            [
                "6f9e5dc819df01a3"
            ]
        ]
    },
    {
        "id": "ec139b08dc926de7",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "Definir Visualización",
        "func": "if (msg.payload == true){\n    msg.payload = {\n        groups: {\n            show: ['Nivel de Tanques y Consistencias:Alarmas de Consistencia']\n        }\n    }\n}\nelse{\n    msg.payload = {\n        groups:{\n            hide: ['Nivel de Tanques y Consistencias:Alarmas de Consistencia']\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "5b8a992bf5cc99a7"
            ]
        ]
    },
    {
        "id": "6f9e5dc819df01a3",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "13a87a95c74685d5"
        ],
        "x": 555,
        "y": 100,
        "wires": []
    },
    {
        "id": "5b8a992bf5cc99a7",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "13a87a95c74685d5"
        ],
        "x": 555,
        "y": 140,
        "wires": []
    },
    {
        "id": "56cc34c611e3aa19",
        "type": "ui-led",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #1",
        "group": "0bb5cb43c75b3ae3",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Bomba tanque #1",
        "labelPlacement": "left",
        "labelAlignment": "flex-start",
        "states": [
            {
                "value": "false",
                "valueType": "bool",
                "color": "#c8c0c0"
            },
            {
                "value": "true",
                "valueType": "bool",
                "color": "#00ff00"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showBorder": false,
        "showGlow": false,
        "x": 450,
        "y": 880,
        "wires": []
    },
    {
        "id": "bbc055afb7ab74bf",
        "type": "ui-led",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #2",
        "group": "0bb5cb43c75b3ae3",
        "order": 2,
        "width": "6",
        "height": "1",
        "label": "Bomba tanque #2",
        "labelPlacement": "left",
        "labelAlignment": "flex-start",
        "states": [
            {
                "value": "false",
                "valueType": "bool",
                "color": "#cbc8c8"
            },
            {
                "value": "true",
                "valueType": "bool",
                "color": "#00ff00"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showBorder": false,
        "showGlow": false,
        "x": 450,
        "y": 980,
        "wires": []
    },
    {
        "id": "ccc3ab9c27d9f9c3",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 1060,
        "wires": [
            [
                "930804d361e453ef"
            ]
        ]
    },
    {
        "id": "be5e86de6778c479",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "56cc34c611e3aa19"
            ]
        ]
    },
    {
        "id": "45110b512d425f1c",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 980,
        "wires": [
            [
                "bbc055afb7ab74bf"
            ]
        ]
    },
    {
        "id": "d8a8926796942a72",
        "type": "comment",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Estados",
        "info": "",
        "x": 140,
        "y": 840,
        "wires": []
    },
    {
        "id": "930804d361e453ef",
        "type": "ui-led",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #3",
        "group": "0bb5cb43c75b3ae3",
        "order": 3,
        "width": "6",
        "height": "1",
        "label": "Bomba tanque #3",
        "labelPlacement": "left",
        "labelAlignment": "flex-start",
        "states": [
            {
                "value": "false",
                "valueType": "bool",
                "color": "#cbc8c8"
            },
            {
                "value": "true",
                "valueType": "bool",
                "color": "#00ff00"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showBorder": false,
        "showGlow": false,
        "x": 450,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3ae6d3240d6991c5",
        "type": "ui-text-input",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "group": "e76ae94a4bfa84af",
        "name": "valor min consistencia tq #2",
        "label": "Valor Min:",
        "order": 2,
        "width": "2",
        "height": "1",
        "topic": "topic",
        "topicType": "msg",
        "mode": "number",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 620,
        "y": 2200,
        "wires": [
            [
                "44b89123db8cadcd"
            ]
        ]
    },
    {
        "id": "44b89123db8cadcd",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "valor_min_consistencia_tq2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 2200,
        "wires": [
            [
                "5fae114ab90c8c61"
            ]
        ]
    },
    {
        "id": "191237e9151d48b7",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Definir Valor temperatura",
        "func": "let umbral_consistencia_tq2_min = flow.get(\"valor_min_consistencia_tq2\");\n\nif (umbral_consistencia_tq2_min != undefined){\n    msg.payload = umbral_consistencia_tq2_min;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2260,
        "wires": [
            [
                "29b11beb6d562f0a"
            ]
        ]
    },
    {
        "id": "191183c1024f92b6",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "Definir valor inicial",
        "func": "let umbral_consistencia_tq2_min = global.get(\"umbral_consistencia_tq2_min\");\n\nif (umbral_consistencia_tq2_min == undefined){\n    msg.payload = 0;\n    global.set(\"umbral_consistencia_tq2_min\",0);\n    return msg;\n}\nelse{\n    msg.payload = umbral_consistencia_tq2_min;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2200,
        "wires": [
            [
                "3ae6d3240d6991c5"
            ]
        ]
    },
    {
        "id": "bdb4712be7fe48ce",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 2200,
        "wires": [
            [
                "191183c1024f92b6"
            ]
        ]
    },
    {
        "id": "29b11beb6d562f0a",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "umbral_consistencia_tq2_min",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2260,
        "wires": [
            [
                "3ae6d3240d6991c5",
                "b3078b410e1c1840"
            ]
        ]
    },
    {
        "id": "5fae114ab90c8c61",
        "type": "debug",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 2200,
        "wires": []
    },
    {
        "id": "b3078b410e1c1840",
        "type": "debug",
        "z": "94a15dd7d3812aaa",
        "g": "440f863fc6381d07",
        "name": "debug 76",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 2260,
        "wires": []
    },
    {
        "id": "0751b80ba44998c8",
        "type": "rbe",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 650,
        "y": 560,
        "wires": [
            [
                "4b9c5d96b4a2173f"
            ]
        ]
    },
    {
        "id": "75ef21d1c72c8b46",
        "type": "rbe",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 650,
        "y": 600,
        "wires": [
            [
                "b319484505e061cc"
            ]
        ]
    },
    {
        "id": "768930b1962d6db6",
        "type": "rbe",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 650,
        "y": 640,
        "wires": [
            [
                "d6de62c3f6ca17de"
            ]
        ]
    },
    {
        "id": "d6de62c3f6ca17de",
        "type": "ui-gauge",
        "z": "94a15dd7d3812aaa",
        "g": "87b1dae14414d730",
        "name": "CCS TQ5",
        "group": "6f4b3c73ce9cede1",
        "order": 4,
        "width": "2",
        "height": "3",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "CCS TQ5",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "2",
                "color": "#ffc800"
            },
            {
                "from": "3",
                "color": "#00ff00"
            },
            {
                "from": "4",
                "color": "#ffc800"
            },
            {
                "from": "6",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "10",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "32",
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 800,
        "y": 640,
        "wires": []
    },
    {
        "id": "237cf5b6dd701659",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 190,
        "y": 920,
        "wires": [
            [
                "56cc34c611e3aa19"
            ]
        ]
    },
    {
        "id": "e50d82ea710e3a40",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 190,
        "y": 1020,
        "wires": [
            [
                "bbc055afb7ab74bf"
            ]
        ]
    },
    {
        "id": "09f8067824d8d03f",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Bomba tanque #1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 190,
        "y": 1100,
        "wires": [
            [
                "930804d361e453ef"
            ]
        ]
    },
    {
        "id": "304bb6f4d055aa69",
        "type": "ui-switch",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "",
        "label": "Equipos encendidos",
        "group": "bc1a2e8073f733e7",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "eye",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "eye-off",
        "offcolor": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "de6238396bb3fc0d"
            ]
        ]
    },
    {
        "id": "de6238396bb3fc0d",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "Definir Visualización",
        "func": "if (msg.payload == true){\n    msg.payload = {\n        groups: {\n            show: ['Nivel de Tanques y Consistencias:Equipos encendidos']\n        }\n    }\n}\nelse{\n    msg.payload = {\n        groups:{\n            hide: ['Nivel de Tanques y Consistencias:Equipos encendidos']\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "88791931703fa530"
            ]
        ]
    },
    {
        "id": "88791931703fa530",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "f6065db452627f49",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "13a87a95c74685d5"
        ],
        "x": 555,
        "y": 180,
        "wires": []
    },
    {
        "id": "2c97575a14f45ee9",
        "type": "ui-slider",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "group": "0bb5cb43c75b3ae3",
        "name": "RPM",
        "label": "RPM",
        "tooltip": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": 0,
        "max": "1800",
        "step": 1,
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "x": 130,
        "y": 1220,
        "wires": [
            [
                "418608bc1b787d42"
            ]
        ]
    },
    {
        "id": "8a438bdd41d36a99",
        "type": "ui-button",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "group": "0bb5cb43c75b3ae3",
        "name": "Aceptar",
        "label": "Aceptar",
        "order": 7,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "check-bold",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 140,
        "y": 1280,
        "wires": [
            [
                "c487a1c47110ca2e"
            ]
        ]
    },
    {
        "id": "7be85de3d853e87b",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "group": "0bb5cb43c75b3ae3",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Configurar velocidad de la bomba",
        "label": "Configurar velocidad de la bomba TQ #3  [RPM]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "className": "",
        "x": 220,
        "y": 1180,
        "wires": []
    },
    {
        "id": "418608bc1b787d42",
        "type": "change",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Guardar dato",
        "rules": [
            {
                "t": "set",
                "p": "RPM",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "c487a1c47110ca2e",
        "type": "function",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Definir Fvalor RPM",
        "func": "let RPM = flow.get(\"RPM\");\n\nif (RPM != undefined){\n    msg.payload = RPM;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1280,
        "wires": [
            [
                "c5b6fa5050879d3f"
            ]
        ]
    },
    {
        "id": "f690d89eb7401423",
        "type": "comment",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "name": "Velocidad Bomba TQ#3  RPM",
        "info": "",
        "x": 200,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c5b6fa5050879d3f",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "15d26398254c80a3",
        "group": "0bb5cb43c75b3ae3",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "RPM",
        "label": "Velocidad de la bomba [RPM]:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 550,
        "y": 1280,
        "wires": []
    },
    {
        "id": "13a87a95c74685d5",
        "type": "link in",
        "z": "94a15dd7d3812aaa",
        "name": "link in 9",
        "links": [
            "25933bebe3a262a1",
            "5b8a992bf5cc99a7",
            "6f9e5dc819df01a3",
            "88791931703fa530",
            "ae14b84e95b478ff"
        ],
        "x": 125,
        "y": 3340,
        "wires": [
            [
                "8e53b023bfe75c0b"
            ]
        ]
    },
    {
        "id": "8e53b023bfe75c0b",
        "type": "ui-control",
        "z": "94a15dd7d3812aaa",
        "name": "",
        "ui": "f3311352aada9d8e",
        "events": "all",
        "x": 230,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "b8630ac61bdb8252",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "group": "4a0d1ccff6607e24",
        "order": 4,
        "width": "2",
        "height": "2",
        "name": "Diferencial de presion secador #17",
        "label": "Diferencial de presion secador #17 [bar]:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 480,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6eeaa6164191e613",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1.6",
        "payloadType": "num",
        "x": 150,
        "y": 1680,
        "wires": [
            [
                "b8630ac61bdb8252"
            ]
        ]
    },
    {
        "id": "6c1c2e7f2d8269bd",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "group": "4a0d1ccff6607e24",
        "order": 7,
        "width": "2",
        "height": "2",
        "name": "Diferencial de presion secador #16",
        "label": "Diferencial de presion secador #16 [bar]:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 480,
        "y": 1640,
        "wires": []
    },
    {
        "id": "c4e9285406b6ced7",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0.7",
        "payloadType": "num",
        "x": 150,
        "y": 1640,
        "wires": [
            [
                "6c1c2e7f2d8269bd"
            ]
        ]
    },
    {
        "id": "c3d8690ec107b5f8",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "group": "4a0d1ccff6607e24",
        "order": 6,
        "width": "2",
        "height": "2",
        "name": "Diferencial de presion secador #15",
        "label": "Diferencial de presion secador #15 [bar]:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 480,
        "y": 1600,
        "wires": []
    },
    {
        "id": "543b771a0498912a",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1.5",
        "payloadType": "num",
        "x": 150,
        "y": 1600,
        "wires": [
            [
                "c3d8690ec107b5f8"
            ]
        ]
    },
    {
        "id": "3fa04eeb3839a6fc",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "group": "4a0d1ccff6607e24",
        "order": 3,
        "width": "2",
        "height": "2",
        "name": "Diferencial de presion secador #14",
        "label": "Diferencial de presion secador #14 [bar]:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 480,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3217d9de6384d5f7",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "3fa04eeb3839a6fc"
            ]
        ]
    },
    {
        "id": "e7a47083b407e57a",
        "type": "ui-template",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "group": "4a0d1ccff6607e24",
        "page": "",
        "ui": "",
        "name": "Imagen Bomba",
        "order": 1,
        "width": "6",
        "height": "3",
        "head": "",
        "format": "<style>\n    .resize{\n        max-width: 50%;\n    }\n    </style>\n    <img src=\"http://localhost:1880/Secadores.jpg\">\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "855acaa7d914dc93",
        "type": "comment",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "Imágenes",
        "info": "",
        "x": 140,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9f923d2668dd6b3e",
        "type": "ui-text",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "group": "4a0d1ccff6607e24",
        "order": 5,
        "width": "2",
        "height": "2",
        "name": "Diferencial de presion secador #18",
        "label": "Diferencial de presion secador #18 [bar]:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 480,
        "y": 1720,
        "wires": []
    },
    {
        "id": "70bc2c24b04ba002",
        "type": "inject",
        "z": "94a15dd7d3812aaa",
        "g": "c5e5199fdebd6c38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1.6",
        "payloadType": "num",
        "x": 150,
        "y": 1720,
        "wires": [
            [
                "9f923d2668dd6b3e"
            ]
        ]
    },
    {
        "id": "86e631f0fc02ab7e",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "37e2f641954d6353",
            "78290e82c02a76e6"
        ],
        "x": 495,
        "y": 3060,
        "wires": []
    },
    {
        "id": "86e5c34d57e7fb11",
        "type": "link out",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "37e2f641954d6353"
        ],
        "x": 535,
        "y": 3020,
        "wires": []
    },
    {
        "id": "78290e82c02a76e6",
        "type": "link in",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "link in 13",
        "links": [
            "86e631f0fc02ab7e"
        ],
        "x": 105,
        "y": 2980,
        "wires": [
            [
                "402f8d4563a9c04e"
            ]
        ]
    },
    {
        "id": "37e2f641954d6353",
        "type": "link in",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "link in 14",
        "links": [
            "86e631f0fc02ab7e",
            "86e5c34d57e7fb11"
        ],
        "x": 105,
        "y": 3100,
        "wires": [
            [
                "68aae23c159191dd"
            ]
        ]
    },
    {
        "id": "201a2824320cfc42",
        "type": "debug",
        "z": "94a15dd7d3812aaa",
        "g": "8eb1cd980445347c",
        "name": "debug 86",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 2980,
        "wires": []
    },
    {
        "id": "655e5af2ad4dc86d",
        "type": "subflow:a2e24b83dda85699",
        "z": "df01ad0d43f0b640",
        "g": "5034021e1faef235",
        "name": "",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "e66d9618f4caffb3"
            ]
        ]
    },
    {
        "id": "80f17f4c1d060f5f",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "5034021e1faef235",
        "name": "Activar",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "655e5af2ad4dc86d"
            ]
        ]
    },
    {
        "id": "9924d4f84578e3a1",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "5034021e1faef235",
        "name": "debug 61",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 60,
        "wires": []
    },
    {
        "id": "10cfadc7692aea57",
        "type": "e-mail",
        "z": "df01ad0d43f0b640",
        "d": true,
        "g": "fc339c3f2d17446c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "",
        "dname": "Enviar correo ",
        "x": 850,
        "y": 160,
        "wires": []
    },
    {
        "id": "3e06d5c77af71f1a",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "ff313b64ba2ed64e"
            ]
        ]
    },
    {
        "id": "057bab2507e6edde",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Definir el contenido",
        "func": "msg.attachments =\n{\n    filename: \"prueba curso.csv\",\n    content: msg.payload\n};\n\nmsg.topic =  \"Esto es una prueba2\";\nmsg.payload = \"hola, te mando un saludo desde Node-Red\";\nmsg.to = global.get(\"correo_seleccionado\");\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 160,
        "wires": [
            [
                "10cfadc7692aea57"
            ]
        ]
    },
    {
        "id": "f40a3cb88f89f0b9",
        "type": "file in",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Buscar archivo CSV",
        "filename": "C:\\Users\\luish\\Downloads\\prueba curso.csv",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1160,
        "y": 220,
        "wires": [
            [
                "10cfadc7692aea57"
            ]
        ]
    },
    {
        "id": "5bdec1d00dac1a7e",
        "type": "e-mail in",
        "z": "df01ad0d43f0b640",
        "d": true,
        "g": "fc339c3f2d17446c",
        "name": "",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "required",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "auto",
        "inputs": 0,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "a3a47739dd06dbc2"
            ]
        ]
    },
    {
        "id": "a3a47739dd06dbc2",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Enviar CSV",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 220,
        "wires": [
            [
                "972725fdbc0d1eda"
            ]
        ]
    },
    {
        "id": "4718aa95f0a69884",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Definir el contenido",
        "func": "msg.attachments =\n{\n    filename: \"prueba curso.csv\",\n    content: msg.payload\n};\n\nmsg.topic =  \"Esto es una prueba2\";\nmsg.payload = \"hola, te mando un saludo desde Node-Red\";\nmsg.to = global.get(\"correo_seleccionado\");\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 220,
        "wires": [
            [
                "f40a3cb88f89f0b9"
            ]
        ]
    },
    {
        "id": "ff313b64ba2ed64e",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Detectar estado",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 160,
        "wires": [
            [
                "057bab2507e6edde"
            ]
        ]
    },
    {
        "id": "972725fdbc0d1eda",
        "type": "subflow:b03c7ea2def97f1e",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "048fbade55f8dd3e"
            ]
        ]
    },
    {
        "id": "048fbade55f8dd3e",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "",
        "property": "archivo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 220,
        "wires": [
            [
                "4718aa95f0a69884"
            ],
            [
                "72cac3bd7fda21ab"
            ]
        ]
    },
    {
        "id": "72cac3bd7fda21ab",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Definir el contenido",
        "func": "\nmsg.topic =  \"Esto es una prueba2\";\nmsg.payload = \"No se encontro archivo\";\nmsg.to = global.get(\"correo_seleccionado\");\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "10cfadc7692aea57"
            ]
        ]
    },
    {
        "id": "61b67a9206c4a081",
        "type": "modbus-flex-getter",
        "z": "df01ad0d43f0b640",
        "d": true,
        "g": "62d3dfe939d4c16d",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 510,
        "y": 600,
        "wires": [
            [
                "3c0fce7d12910924"
            ],
            [
                "c257763ef562cabd"
            ]
        ]
    },
    {
        "id": "9c898ed3b67baba9",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "62d3dfe939d4c16d",
        "name": "function 41",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 3, 'unitid': 1, \n    'address': 512, \n    'quantity': 19\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 600,
        "wires": [
            [
                "61b67a9206c4a081"
            ]
        ]
    },
    {
        "id": "2d117c255fcb7fbe",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "62d3dfe939d4c16d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "9c898ed3b67baba9"
            ]
        ]
    },
    {
        "id": "3c0fce7d12910924",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "62d3dfe939d4c16d",
        "name": "debug 63",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 580,
        "wires": []
    },
    {
        "id": "c257763ef562cabd",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "62d3dfe939d4c16d",
        "name": "function 42",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst temp=buf[0];\nbuf[0] = buf[1];\nbuf[1] = temp;\nconst temp2 = buf[2];\nbuf[2] = buf[3];\nbuf[3] = temp2;\n\n\nconst value = buf.readFloatLE();\n\nmsg.valor_real = value;\nmsg.valor_real = value.toFixed(2);\nglobal.set (\"Señales_de_entrada\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 660,
        "wires": [
            [
                "ff62cc80a1ded677"
            ]
        ]
    },
    {
        "id": "ff62cc80a1ded677",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "62d3dfe939d4c16d",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 660,
        "wires": []
    },
    {
        "id": "0491c436757f599b",
        "type": "modbus-read",
        "z": "df01ad0d43f0b640",
        "d": true,
        "g": "3146867064a8c7f5",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6001",
        "quantity": "16",
        "rate": "3",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 150,
        "y": 780,
        "wires": [
            [
                "f89f59c56cb3be7e"
            ],
            [
                "68db541fc3da821f"
            ]
        ]
    },
    {
        "id": "f89f59c56cb3be7e",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "3146867064a8c7f5",
        "name": "debug 68",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 780,
        "wires": []
    },
    {
        "id": "68db541fc3da821f",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "3146867064a8c7f5",
        "name": "debug 69",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data[1]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 840,
        "wires": []
    },
    {
        "id": "e3c0002b1286227b",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "umbral_consistencia_tq2_min",
                "vt": "msg"
            },
            {
                "t": "gt",
                "v": "umbral_consistencia_tq2_max",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 980,
        "wires": [
            [
                "5349c2768cd95f19"
            ],
            [
                "6a5b349f5fc29756"
            ]
        ]
    },
    {
        "id": "5349c2768cd95f19",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "Definir Alarma",
        "func": "msg.payload ={\n    variable : msg.payload,\n    descripcion : \"Consistencia Tanque #2 Baja\",\n    prioridad : 1\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 940,
        "wires": [
            [
                "946ec3e4cb40803b"
            ]
        ]
    },
    {
        "id": "946ec3e4cb40803b",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "3186db753d5470dd"
        ],
        "x": 1375,
        "y": 940,
        "wires": []
    },
    {
        "id": "df35f11adf9fd732",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "Prueba señal falla bomba",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 230,
        "y": 1080,
        "wires": [
            [
                "b29fa65c0e5378bb"
            ]
        ]
    },
    {
        "id": "5baf4348dd5d62ca",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "Definir Alarma",
        "func": "msg.payload ={\n    variable : msg.payload,\n    descripcion : \"Falla bomba TQ# 1\",\n    prioridad : 2\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1080,
        "wires": [
            [
                "5f2acd1c59475a9c"
            ]
        ]
    },
    {
        "id": "5f2acd1c59475a9c",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "3186db753d5470dd"
        ],
        "x": 835,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b29fa65c0e5378bb",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 1080,
        "wires": [
            [
                "5baf4348dd5d62ca"
            ]
        ]
    },
    {
        "id": "8515b9218628de35",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "3181e7d56510fe75"
            ]
        ]
    },
    {
        "id": "3181e7d56510fe75",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "Valor Random",
        "func": "msg.payload = 0;\nmsg.payload = Math.random() * (8 - 2) + 2; \nglobal.set (\"Consistencia_tanque#2\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 980,
        "wires": [
            [
                "4ad333b136627bcb"
            ]
        ]
    },
    {
        "id": "937199a81abcab6d",
        "type": "csv",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "timestamp, descripcion, variable, prioridad",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1010,
        "y": 1680,
        "wires": [
            [
                "1f4c252e86b14fe8"
            ]
        ]
    },
    {
        "id": "1f4c252e86b14fe8",
        "type": "file",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "Escribir archivo CSV",
        "filename": "C:\\Users\\luish\\OneDrive\\Escritorio\\Archivos de prueba\\alarmas.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1200,
        "y": 1680,
        "wires": [
            [
                "2b51b05b335b86ee"
            ]
        ]
    },
    {
        "id": "2b51b05b335b86ee",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "debug 71",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 1680,
        "wires": []
    },
    {
        "id": "e08792b22227fbb2",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "Datos CSV",
        "func": "let alarma = flow.get(\"alarma\");\nlet timestamp = flow.get(\"Timestamp\");\nmsg.payload = alarma.variable.toFixed(2);\n\nmsg.payload = [timestamp, alarma.descripcion , alarma.variable , alarma.prioridad];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1680,
        "wires": [
            [
                "cf32bb1458337e14"
            ]
        ]
    },
    {
        "id": "70e958cf7507283a",
        "type": "subflow:b03c7ea2def97f1e",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "",
        "env": [
            {
                "name": "NombredelArchivo",
                "value": "alarmas.csv",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1680,
        "wires": [
            [
                "e08792b22227fbb2"
            ]
        ]
    },
    {
        "id": "cf32bb1458337e14",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "",
        "property": "archivo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 1680,
        "wires": [
            [
                "937199a81abcab6d"
            ],
            [
                "872f6e1266257aa2"
            ]
        ]
    },
    {
        "id": "872f6e1266257aa2",
        "type": "csv",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "timestamp, descripcion, variable, prioridad",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1010,
        "y": 1740,
        "wires": [
            [
                "1f4c252e86b14fe8"
            ]
        ]
    },
    {
        "id": "b3f92fb7ba10413f",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alarma",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 1680,
        "wires": [
            [
                "70e958cf7507283a"
            ]
        ]
    },
    {
        "id": "3186db753d5470dd",
        "type": "link in",
        "z": "df01ad0d43f0b640",
        "g": "0f93b4b24a237081",
        "name": "link in 11",
        "links": [
            "5f2acd1c59475a9c",
            "946ec3e4cb40803b",
            "f34b238debdfd853",
            "3cc0c2b93303f597",
            "dcd00a97703a2af8"
        ],
        "x": 65,
        "y": 1680,
        "wires": [
            [
                "b3f92fb7ba10413f"
            ]
        ]
    },
    {
        "id": "e66d9618f4caffb3",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "5034021e1faef235",
        "name": "function 43",
        "func": "flow.set (\"Timestamp\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 60,
        "wires": [
            [
                "9924d4f84578e3a1"
            ]
        ]
    },
    {
        "id": "54a1bbc424a1ed56",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "f626fac560c1df58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1400,
        "wires": [
            [
                "4db3eb3dd25f2bfd"
            ]
        ]
    },
    {
        "id": "4db3eb3dd25f2bfd",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "f626fac560c1df58",
        "name": "function 44",
        "func": "msg.payload = global.get(\"Señales_de_entrada\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1400,
        "wires": [
            [
                "a2e804c808a11bf5"
            ]
        ]
    },
    {
        "id": "a2e804c808a11bf5",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "f626fac560c1df58",
        "name": "",
        "property": "payload.data[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "umbral_consistencia_tq2_max",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 1400,
        "wires": [
            [
                "ac728b59d270d12c",
                "9af7567bd25cfe23"
            ]
        ]
    },
    {
        "id": "ac728b59d270d12c",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "f626fac560c1df58",
        "name": "> 90",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9af7567bd25cfe23",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "f626fac560c1df58",
        "name": "Definir Alarma",
        "func": "msg.payload ={\n    variable: msg.payload.data[0],\n    descripcion : \"Nivel Tanque 1 elevado\",\n    prioridad : 1\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1340,
        "wires": [
            [
                "f34b238debdfd853"
            ]
        ]
    },
    {
        "id": "f34b238debdfd853",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "g": "f626fac560c1df58",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "3186db753d5470dd"
        ],
        "x": 1085,
        "y": 1340,
        "wires": []
    },
    {
        "id": "4f5408bb26b4057b",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "Alarma activada?",
        "property": "activar_alarma",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 980,
        "wires": [
            [
                "e3c0002b1286227b"
            ]
        ]
    },
    {
        "id": "4ad333b136627bcb",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "Max, Min y activ de alarma",
        "func": "let umbral_consistencia_tq2_min = global.get(\"umbral_consistencia_tq2_min\");\nlet umbral_consistencia_tq2_max = global.get(\"umbral_consistencia_tq2_max\");\nlet activar_alarma = global.get(\"alarma_consistencia_tq2\");\nmsg.umbral_consistencia_tq2_min = umbral_consistencia_tq2_min;\nmsg.umbral_consistencia_tq2_max = umbral_consistencia_tq2_max;\nmsg.activar_alarma = activar_alarma;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 980,
        "wires": [
            [
                "4f5408bb26b4057b"
            ]
        ]
    },
    {
        "id": "6a5b349f5fc29756",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "Definir Alarma",
        "func": "msg.payload ={\n    variable : msg.payload,\n    descripcion : \"Consistencia Tanque #2 Alta\",\n    prioridad : 1\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1060,
        "wires": [
            [
                "dcd00a97703a2af8"
            ]
        ]
    },
    {
        "id": "dcd00a97703a2af8",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "g": "5c8ca2b96a435bf0",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "3186db753d5470dd"
        ],
        "x": 1365,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4eb0938687c8c560",
        "type": "csv",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": false,
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "Dia, Hora, nivel",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1010,
        "y": 1520,
        "wires": [
            [
                "4972ee9b9c40b5e5"
            ]
        ]
    },
    {
        "id": "4972ee9b9c40b5e5",
        "type": "file",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "Escribir archivo CSV",
        "filename": "C:\\Users\\luish\\OneDrive\\Escritorio\\Archivos de prueba\\nivel_tq_1.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1200,
        "y": 1520,
        "wires": [
            [
                "1b993da54b4e9166"
            ]
        ]
    },
    {
        "id": "1b993da54b4e9166",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "debug 77",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b1b8a8686e155fec",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "Datos CSV",
        "func": "const fecha = new Date();\n\nconst anio = fecha.getFullYear();\nconst mes = ('0' + (fecha.getMonth() + 1)).slice(-2);\nconst dia = ('0' + (fecha.getDay() + 15)).slice(-2);\nconst hora = ('0' + (fecha.getHours())).slice(-2);\nconst minuto = ('0' + (fecha.getMinutes())).slice(-2);\nconst segundo = ('0' + (fecha.getSeconds())).slice(-2);\n\nlet fecha2 = anio + '-' + mes + '-' + dia + '  ' ;\nlet hora2 = hora + ':' + minuto + ':' + segundo;\n\nlet alarma = flow.get(\"alarma\");\nlet timestamp = flow.get(\"Timestamp\"); \n\nmsg.payload = [fecha2, hora2, alarma.descripcion];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1520,
        "wires": [
            [
                "b057d5f2803b499c"
            ]
        ]
    },
    {
        "id": "f4762468576daf7b",
        "type": "subflow:b03c7ea2def97f1e",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "",
        "env": [
            {
                "name": "NombredelArchivo",
                "value": "nivel_tq_1.csv",
                "type": "str"
            }
        ],
        "x": 480,
        "y": 1520,
        "wires": [
            [
                "b1b8a8686e155fec"
            ]
        ]
    },
    {
        "id": "b057d5f2803b499c",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "",
        "property": "archivo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 1520,
        "wires": [
            [
                "4eb0938687c8c560"
            ],
            [
                "e2adc4c9636ed2c8"
            ]
        ]
    },
    {
        "id": "e2adc4c9636ed2c8",
        "type": "csv",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "Dia, Hora, nivel",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1010,
        "y": 1580,
        "wires": [
            [
                "4972ee9b9c40b5e5"
            ]
        ]
    },
    {
        "id": "9bc17c1b4f2503d6",
        "type": "link in",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "link in 12",
        "links": [
            "a542d8680bbab8ea"
        ],
        "x": 65,
        "y": 1520,
        "wires": [
            [
                "8093331192bba607"
            ]
        ]
    },
    {
        "id": "a23d0522d8b6a586",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "function 45",
        "func": "//Mensajes variables para prueba\nlet valor = global.get('valor_tq1') || 20;\nlet subiendo = flow.get('subiendo_tq1');\n\n// Si 'subiendo' no está definido, inicializamos como verdadero\nif (subiendo === undefined) {\n    subiendo = true;\n}\n\n// Verificamos si debemos incrementar o decrementar\nif (subiendo) {\n    valor++;\n    if (valor >= 30) {\n        subiendo = false; // Cambiar dirección cuando llega a 90\n    }\n} else {\n    valor--;\n    if (valor <= 20) {\n        subiendo = true; // Cambiar dirección cuando llega a 20\n    }\n}\n\n// Guardamos los valores actualizados en el contexto de flujo\nglobal.set('valor_tq1', valor);\nflow.set('subiendo_tq1', subiendo);\n\n\n// Enviar el valor actualizado en el payload\nmsg.payload ={\n    variable : valor,\n    descripcion: valor,\n    prioridad : 1\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "a542d8680bbab8ea",
                "0a43e61368b1031d"
            ]
        ]
    },
    {
        "id": "bde3cc558683b9a2",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1220,
        "wires": [
            [
                "a23d0522d8b6a586"
            ]
        ]
    },
    {
        "id": "a542d8680bbab8ea",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "9bc17c1b4f2503d6"
        ],
        "x": 655,
        "y": 1180,
        "wires": []
    },
    {
        "id": "8093331192bba607",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "g": "17ce7ab3d044649d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alarma",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1520,
        "wires": [
            [
                "f4762468576daf7b"
            ]
        ]
    },
    {
        "id": "c417434caa50f07f",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "df01ad0d43f0b640",
        "d": true,
        "g": "87041afa1ce3b835",
        "name": "",
        "credtype": "account",
        "account": "b9fcabccfa99d4f5",
        "text": "Hola!Te escribo desde Node-Red",
        "phonenumbervalue": "",
        "apikeyvalue": "5200738",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "str",
        "rejectssl": false,
        "x": 360,
        "y": 400,
        "wires": [
            [
                "400ae784fb5921b0"
            ]
        ]
    },
    {
        "id": "b4fbc7cdd02c7a76",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "87041afa1ce3b835",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "c417434caa50f07f"
            ]
        ]
    },
    {
        "id": "400ae784fb5921b0",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "87041afa1ce3b835",
        "name": "debug 78",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 400,
        "wires": []
    },
    {
        "id": "adb2d9b421e90ad5",
        "type": "mqtt out",
        "z": "df01ad0d43f0b640",
        "d": true,
        "g": "87041afa1ce3b835",
        "name": "",
        "topic": "ceypabasa/pastas/consistencia",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0af5ac84042856c1",
        "x": 570,
        "y": 440,
        "wires": []
    },
    {
        "id": "d2bd39db49d9f67d",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "87041afa1ce3b835",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Nivel alto en consistencia TQ #2",
        "payloadType": "str",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "adb2d9b421e90ad5"
            ]
        ]
    },
    {
        "id": "4c68f090941f53a6",
        "type": "e-mail",
        "z": "df01ad0d43f0b640",
        "d": true,
        "g": "fc339c3f2d17446c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "",
        "dname": "Enviar correo ",
        "x": 1070,
        "y": 300,
        "wires": []
    },
    {
        "id": "ed20e2855b9135bc",
        "type": "inject",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "9c44aeda91abaee8"
            ]
        ]
    },
    {
        "id": "867ac0e57a7521fd",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Definir el contenido",
        "func": "msg.attachments =\n{\n    filename: \"nivel_tq_1.csv\",\n    content: msg.payload\n};\n\nmsg.topic =  \"Nivel_tq_1\";\nmsg.payload = \"hola, te mando EL nivel_tq_1 adquirido por Node-Red\";\nmsg.to = global.get(\"correo_seleccionado\");\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "88807d531d294627"
            ]
        ]
    },
    {
        "id": "9c44aeda91abaee8",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Detectar estado",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 300,
        "wires": [
            [
                "867ac0e57a7521fd"
            ]
        ]
    },
    {
        "id": "88807d531d294627",
        "type": "file in",
        "z": "df01ad0d43f0b640",
        "g": "fc339c3f2d17446c",
        "name": "Buscar archivo CSV",
        "filename": "C:\\Users\\luish\\Downloads\\nivel_tq_1.csv",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 800,
        "y": 300,
        "wires": [
            [
                "4c68f090941f53a6"
            ]
        ]
    },
    {
        "id": "bedc607dd54db9f0",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "29",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1240,
        "wires": [
            [
                "c3f8954b1c3091e0"
            ]
        ]
    },
    {
        "id": "0a43e61368b1031d",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "function 46",
        "func": "let valor = global.get('valor_tq1')\nmsg.payload = valor;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1240,
        "wires": [
            [
                "bedc607dd54db9f0"
            ]
        ]
    },
    {
        "id": "e075028fb4af1e5f",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "9f884bcff6e3be3a"
        ],
        "x": 1275,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5f28d32d1ee192e3",
        "type": "link in",
        "z": "df01ad0d43f0b640",
        "g": "87041afa1ce3b835",
        "name": "link in 15",
        "links": [],
        "x": 365,
        "y": 480,
        "wires": [
            [
                "adb2d9b421e90ad5"
            ]
        ]
    },
    {
        "id": "c3f8954b1c3091e0",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "content",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1240,
        "wires": [
            [
                "e075028fb4af1e5f",
                "57ee5dfc6ee8001e"
            ]
        ]
    },
    {
        "id": "194019fcacce2ca3",
        "type": "telegram receiver",
        "z": "df01ad0d43f0b640",
        "name": "",
        "bot": "96088c75d72e4669",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 150,
        "y": 1880,
        "wires": [
            [
                "e615058e8409cd26",
                "1ab2810ec9c1d835",
                "1d85cfa0a70fc441"
            ],
            []
        ]
    },
    {
        "id": "e615058e8409cd26",
        "type": "switch",
        "z": "df01ad0d43f0b640",
        "name": "Detectar comando",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/cnivel1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/cnivel2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/cnivel4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/registrotq1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 610,
        "y": 1880,
        "wires": [
            [
                "ee3267fbf10fef3c"
            ],
            [
                "f85f74edfe727c75"
            ],
            [
                "a2d3b5ec6eab38de"
            ],
            [
                "444f0b4fbfcd07e3"
            ]
        ]
    },
    {
        "id": "1ab2810ec9c1d835",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "name": "debug 80",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "originalMessage.from.first_name",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 1800,
        "wires": []
    },
    {
        "id": "e964ec0c588c8d2d",
        "type": "telegram sender",
        "z": "df01ad0d43f0b640",
        "name": "",
        "bot": "96088c75d72e4669",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1110,
        "y": 2240,
        "wires": [
            [
                "70e320e0625b6148"
            ]
        ]
    },
    {
        "id": "70e320e0625b6148",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "name": "debug 81",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 2240,
        "wires": []
    },
    {
        "id": "bcfa5461b3b10bc9",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "name": "function 49",
        "func": "\nlet chatId =flow.get(\"chatId\");\nlet content = flow.get(\"content\");\n \nmsg.payload = {\n    chatId: \"1887252399\",\n    type : \"message\",\n    content: \"Nivel alto tanque 1\"+\"=\"+ content +\"%\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "e964ec0c588c8d2d"
            ]
        ]
    },
    {
        "id": "25ddcec0e29ef292",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "name": "Guardar Chat Id del Usuario",
        "rules": [
            {
                "t": "set",
                "p": "chatId",
                "pt": "flow",
                "to": "payload.chatId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 2180,
        "wires": [
            [
                "bcfa5461b3b10bc9"
            ]
        ]
    },
    {
        "id": "7647c405c5c4280d",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "name": "function 50",
        "func": "let chatId = flow.get(\"chatId\");\nlet content = flow.get(\"content\");\n\n\nmsg.payload = {\n    chatId: chatId,\n    type : \"message\",\n    content: content\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2240,
        "wires": [
            [
                "e964ec0c588c8d2d"
            ]
        ]
    },
    {
        "id": "ee3267fbf10fef3c",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "content",
                "pt": "flow",
                "to": "valor_tq1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1820,
        "wires": [
            [
                "8fa7154483f5f24d"
            ]
        ]
    },
    {
        "id": "8fa7154483f5f24d",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "9f884bcff6e3be3a"
        ],
        "x": 1065,
        "y": 1820,
        "wires": []
    },
    {
        "id": "9f884bcff6e3be3a",
        "type": "link in",
        "z": "df01ad0d43f0b640",
        "name": "link in 16",
        "links": [
            "8fa7154483f5f24d",
            "e075028fb4af1e5f",
            "370331622f584154",
            "138a7c74d3466592"
        ],
        "x": 165,
        "y": 2240,
        "wires": [
            [
                "5b81fb417a389cff"
            ]
        ]
    },
    {
        "id": "ba8e599b5b121c36",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "debug 84",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 1180,
        "wires": []
    },
    {
        "id": "57ee5dfc6ee8001e",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "g": "da1d1e789bae6232",
        "name": "function 52",
        "func": "msg.payload = flow.get(\"content\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1180,
        "wires": [
            [
                "ba8e599b5b121c36"
            ]
        ]
    },
    {
        "id": "f85f74edfe727c75",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "content",
                "pt": "flow",
                "to": "valor_tq2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1860,
        "wires": [
            [
                "370331622f584154"
            ]
        ]
    },
    {
        "id": "370331622f584154",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "9f884bcff6e3be3a"
        ],
        "x": 1055,
        "y": 1860,
        "wires": []
    },
    {
        "id": "a2d3b5ec6eab38de",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "content",
                "pt": "flow",
                "to": "valor_tq4",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1900,
        "wires": [
            [
                "138a7c74d3466592"
            ]
        ]
    },
    {
        "id": "138a7c74d3466592",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "9f884bcff6e3be3a"
        ],
        "x": 1055,
        "y": 1900,
        "wires": []
    },
    {
        "id": "444f0b4fbfcd07e3",
        "type": "file in",
        "z": "df01ad0d43f0b640",
        "name": "Buscar archivo CSV",
        "filename": "C:\\Users\\luish\\OneDrive\\Escritorio\\Archivos de prueba\\nivel_tq_1.csv",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 880,
        "y": 1940,
        "wires": [
            [
                "b52817d35b6fb945"
            ]
        ]
    },
    {
        "id": "d67d4a049f120d65",
        "type": "link in",
        "z": "df01ad0d43f0b640",
        "name": "link in 17",
        "links": [
            "c059d1274fc07945"
        ],
        "x": 905,
        "y": 2120,
        "wires": [
            [
                "e964ec0c588c8d2d"
            ]
        ]
    },
    {
        "id": "5b81fb417a389cff",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "name": "Guardar Chat Id del Usuario",
        "rules": [
            {
                "t": "set",
                "p": "chatId",
                "pt": "flow",
                "to": "payload.chatId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 2240,
        "wires": [
            [
                "7647c405c5c4280d"
            ]
        ]
    },
    {
        "id": "c059d1274fc07945",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "d67d4a049f120d65"
        ],
        "x": 1295,
        "y": 2020,
        "wires": []
    },
    {
        "id": "d1e06bc33b4e0e14",
        "type": "link in",
        "z": "df01ad0d43f0b640",
        "name": "link in 18",
        "links": [
            "b52817d35b6fb945"
        ],
        "x": 485,
        "y": 2020,
        "wires": [
            [
                "cf5ab6bb4d0cdf6f"
            ]
        ]
    },
    {
        "id": "b52817d35b6fb945",
        "type": "link out",
        "z": "df01ad0d43f0b640",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "d1e06bc33b4e0e14"
        ],
        "x": 1075,
        "y": 1940,
        "wires": []
    },
    {
        "id": "cf5ab6bb4d0cdf6f",
        "type": "change",
        "z": "df01ad0d43f0b640",
        "name": "Guardar Chat Id del Usuario",
        "rules": [
            {
                "t": "set",
                "p": "chatId",
                "pt": "flow",
                "to": "originalMessage.chat.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 2020,
        "wires": [
            [
                "5f09b932f3d52845"
            ]
        ]
    },
    {
        "id": "5f09b932f3d52845",
        "type": "function",
        "z": "df01ad0d43f0b640",
        "name": "Asignar propiedades al mensaje",
        "func": "let chatId = flow.get(\"chatId\");\n\nlet doc = Buffer.from(msg.payload);\n\nlet fileOptions = {\n    filename: \"nivel_tq_1.csv\",\n    contentType : \"text/csv\"\n}\nmsg.payload = {\n    chatId : chatId,\n    type : \"document\",\n    \n    content: doc,\n    fileOptions : fileOptions\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2020,
        "wires": [
            [
                "c059d1274fc07945"
            ]
        ]
    },
    {
        "id": "1d85cfa0a70fc441",
        "type": "debug",
        "z": "df01ad0d43f0b640",
        "name": "debug 85",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "originalMessage",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 1840,
        "wires": []
    },
    {
        "id": "55dcdbb079bedd22",
        "type": "inject",
        "z": "e68a1fdf9004451e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "0e42c0fb4f222a8f"
            ]
        ]
    },
    {
        "id": "0e42c0fb4f222a8f",
        "type": "function",
        "z": "e68a1fdf9004451e",
        "name": "function 1",
        "func": "context.set(\"prueba_context\",1);\nflow.set(\"flow_context\", 2);\nglobal.set(\"global_context\", 3);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "d8e77b0549d75b7f"
            ]
        ]
    },
    {
        "id": "d8e77b0549d75b7f",
        "type": "debug",
        "z": "e68a1fdf9004451e",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 160,
        "wires": []
    },
    {
        "id": "89811e8e4c4b5105",
        "type": "inject",
        "z": "e68a1fdf9004451e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "a967a9a4c996cdad"
            ]
        ]
    },
    {
        "id": "a967a9a4c996cdad",
        "type": "function",
        "z": "e68a1fdf9004451e",
        "name": "function 2",
        "func": "msg.context = context.get(\"prueba_context\");\nmsg.flow = flow.get(\"flow_context\");\nmsg.global = global.get(\"global_context\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "2efefb8df1b012bc"
            ]
        ]
    },
    {
        "id": "2efefb8df1b012bc",
        "type": "debug",
        "z": "e68a1fdf9004451e",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "cbfd7147e9e74a96",
        "type": "inject",
        "z": "e68a1fdf9004451e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "4ad63092e8149946"
            ]
        ]
    },
    {
        "id": "4ad63092e8149946",
        "type": "function",
        "z": "e68a1fdf9004451e",
        "name": "function 3",
        "func": "let actual = msg.payload;\n\nif (flow.get(\"maximo\")===undefined){\n    flow.set(\"maximo\",actual);\n}\nif (actual > flow.get(\"maximo\")) {\n    flow.set(\"maximo\", actual);\n}\nmsg.payload = flow.get(\"maximo\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 440,
        "wires": [
            [
                "741ea0ceb5ff1a9c"
            ]
        ]
    },
    {
        "id": "741ea0ceb5ff1a9c",
        "type": "debug",
        "z": "e68a1fdf9004451e",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 440,
        "wires": []
    },
    {
        "id": "67831d3c2d8f1d02",
        "type": "inject",
        "z": "e68a1fdf9004451e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 540,
        "wires": [
            [
                "89ec314325efd160"
            ]
        ]
    },
    {
        "id": "89ec314325efd160",
        "type": "modbus-write",
        "z": "e68a1fdf9004451e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "f6902d71a09d8152",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 280,
        "y": 540,
        "wires": [
            [],
            [
                "0059016447a04e87"
            ]
        ]
    },
    {
        "id": "0059016447a04e87",
        "type": "debug",
        "z": "e68a1fdf9004451e",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 540,
        "wires": []
    },
    {
        "id": "5a675c9ab5d3ccf3",
        "type": "inject",
        "z": "e68a1fdf9004451e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 70,
        "y": 600,
        "wires": [
            [
                "89ec314325efd160"
            ]
        ]
    },
    {
        "id": "4d53829cc0b19a68",
        "type": "modbus-flex-write",
        "z": "e68a1fdf9004451e",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f6902d71a09d8152",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 470,
        "y": 740,
        "wires": [
            [],
            [
                "0556a4b7efcfa730"
            ]
        ]
    },
    {
        "id": "4f823f0e0e2c12c8",
        "type": "inject",
        "z": "e68a1fdf9004451e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 70,
        "y": 740,
        "wires": [
            [
                "f7925a2d3f965bcb"
            ]
        ]
    },
    {
        "id": "f7925a2d3f965bcb",
        "type": "function",
        "z": "e68a1fdf9004451e",
        "name": "function 9",
        "func": "msg.payload = { value: msg.payload, \n'fc': 5, \n'unitid': 1, \n'address': 0, \n'quantity': 1 } \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 740,
        "wires": [
            [
                "4d53829cc0b19a68"
            ]
        ]
    },
    {
        "id": "0556a4b7efcfa730",
        "type": "debug",
        "z": "e68a1fdf9004451e",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 740,
        "wires": []
    },
    {
        "id": "c6abb7e63f9964ff",
        "type": "inject",
        "z": "e0798ddf80f0d483",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "843a84f60afa0387"
            ]
        ]
    },
    {
        "id": "843a84f60afa0387",
        "type": "function",
        "z": "e0798ddf80f0d483",
        "name": "function 4",
        "func": "context.set(\"prueba_context\",1);\nflow.set(\"flow_context\", 2);\nglobal.set(\"global_context\", 3);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "366c9d7522a7d997"
            ]
        ]
    },
    {
        "id": "366c9d7522a7d997",
        "type": "debug",
        "z": "e0798ddf80f0d483",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 120,
        "wires": []
    },
    {
        "id": "ef6ef174240efa09",
        "type": "inject",
        "z": "e0798ddf80f0d483",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 260,
        "wires": [
            [
                "684d44809e99d315"
            ]
        ]
    },
    {
        "id": "684d44809e99d315",
        "type": "function",
        "z": "e0798ddf80f0d483",
        "name": "function 5",
        "func": "msg.context = context.get(\"prueba_context\");\nmsg.flow = flow.get(\"flow_context\");\nmsg.global = global.get(\"global_context\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 260,
        "wires": [
            [
                "53054d6d8bafccda"
            ]
        ]
    },
    {
        "id": "53054d6d8bafccda",
        "type": "debug",
        "z": "e0798ddf80f0d483",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 260,
        "wires": []
    },
    {
        "id": "e714d8bcb9364b66",
        "type": "inject",
        "z": "e0798ddf80f0d483",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "e2d77e6864e10cea"
            ]
        ]
    },
    {
        "id": "e2d77e6864e10cea",
        "type": "function",
        "z": "e0798ddf80f0d483",
        "name": "function 6",
        "func": "let actual = msg.payload;\n\nif (flow.get(\"maximo\")===undefined){\n    flow.set(\"maximo\",actual);\n}\nif (actual > flow.get(\"maximo\")) {\n    flow.set(\"maximo\", actual);\n}\nmsg.payload = flow.get(\"maximo\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 400,
        "wires": [
            [
                "98f2707582088a32"
            ]
        ]
    },
    {
        "id": "98f2707582088a32",
        "type": "debug",
        "z": "e0798ddf80f0d483",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 400,
        "wires": []
    },
    {
        "id": "5bea7567956411c3",
        "type": "change",
        "z": "e0798ddf80f0d483",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 500,
        "wires": [
            [
                "8d837e03dc3e9144"
            ]
        ]
    },
    {
        "id": "8a6e267bb1886657",
        "type": "inject",
        "z": "e0798ddf80f0d483",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Esto es el topic",
        "payload": "Hola mundo",
        "payloadType": "str",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "5bea7567956411c3"
            ]
        ]
    },
    {
        "id": "8d837e03dc3e9144",
        "type": "debug",
        "z": "e0798ddf80f0d483",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 500,
        "wires": []
    },
    {
        "id": "e1ce6f0a2779d0c0",
        "type": "modbus-read",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1000",
        "quantity": "10",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "54bd87e16ad83c07"
            ],
            [
                "9c6fcaeb82c373a9"
            ]
        ]
    },
    {
        "id": "54bd87e16ad83c07",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 160,
        "wires": []
    },
    {
        "id": "9c6fcaeb82c373a9",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "8f74787788a0cd11",
        "type": "modbus-flex-getter",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 360,
        "wires": [
            [
                "8b9227d3333baa92"
            ],
            [
                "e7da1122a55dd9bc"
            ]
        ]
    },
    {
        "id": "67f8c61c46b0e392",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 7",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 4, 'unitid': 10, \n    'address': 40001, \n    'quantity': 2\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "8f74787788a0cd11"
            ]
        ]
    },
    {
        "id": "f8fae7ce8bfccdc0",
        "type": "inject",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "67f8c61c46b0e392"
            ]
        ]
    },
    {
        "id": "bef261b4100f568a",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 420,
        "wires": []
    },
    {
        "id": "8b9227d3333baa92",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 340,
        "wires": []
    },
    {
        "id": "e7da1122a55dd9bc",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 10",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst value = buf.readFloatBE();\nmsg.valor_real = value;\nmsg.payload = value.toFixed(2);\n\nflow.set(\"tension\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 420,
        "wires": [
            [
                "bef261b4100f568a"
            ]
        ]
    },
    {
        "id": "2ea7faf33e74d9b3",
        "type": "modbus-flex-getter",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "75c84fff424b0f8b"
            ],
            [
                "b076ad6d7c887813"
            ]
        ]
    },
    {
        "id": "ae0df9e5e12287dc",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 14",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 3, 'unitid': 1, \n    'address': 3774, \n    'quantity': 2\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 500,
        "wires": [
            [
                "2ea7faf33e74d9b3"
            ]
        ]
    },
    {
        "id": "e09e24ef14cab586",
        "type": "inject",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "ae0df9e5e12287dc"
            ]
        ]
    },
    {
        "id": "c5dbe58c6eec2410",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 560,
        "wires": []
    },
    {
        "id": "75c84fff424b0f8b",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 480,
        "wires": []
    },
    {
        "id": "b076ad6d7c887813",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 15",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst value = buf.readFloatBE();\nmsg.valor_real = value;\nmsg.payload = value.toFixed(2);\n\nflow.set(\"corriente\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "c5dbe58c6eec2410"
            ]
        ]
    },
    {
        "id": "4eec701961fca252",
        "type": "modbus-flex-getter",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 470,
        "y": 640,
        "wires": [
            [
                "0513e71264d431fd"
            ],
            [
                "cbfe5452b3259b34"
            ]
        ]
    },
    {
        "id": "c6899675af1b0531",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 16",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 3, 'unitid': 1, \n    'address': 3776, \n    'quantity': 2\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 640,
        "wires": [
            [
                "4eec701961fca252"
            ]
        ]
    },
    {
        "id": "c55328b40183b28c",
        "type": "inject",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 640,
        "wires": [
            [
                "c6899675af1b0531"
            ]
        ]
    },
    {
        "id": "b4d0592092bd3d5c",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 700,
        "wires": []
    },
    {
        "id": "0513e71264d431fd",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "cbfe5452b3259b34",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 17",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst value = buf.readFloatBE();\nmsg.valor_real = value;\nmsg.payload = value.toFixed(2);\n\nflow.set(\"potencia\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 700,
        "wires": [
            [
                "b4d0592092bd3d5c"
            ]
        ]
    },
    {
        "id": "32ecd0b343fa7639",
        "type": "modbus-flex-getter",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 450,
        "y": 800,
        "wires": [
            [
                "eaac83f67acf40d2"
            ],
            [
                "1854297f62c61c11"
            ]
        ]
    },
    {
        "id": "dec2d8286263af68",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 18",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 3, 'unitid': 1, \n    'address': 3778, \n    'quantity': 2\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 800,
        "wires": [
            [
                "32ecd0b343fa7639"
            ]
        ]
    },
    {
        "id": "3a1caa48055f9a12",
        "type": "inject",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "dec2d8286263af68"
            ]
        ]
    },
    {
        "id": "3dbb6d2ab6c82d8c",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "valor_real",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 860,
        "wires": []
    },
    {
        "id": "eaac83f67acf40d2",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 780,
        "wires": []
    },
    {
        "id": "1854297f62c61c11",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 19",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst value = buf.readFloatBE();\nmsg.valor_real = value;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 860,
        "wires": [
            [
                "3dbb6d2ab6c82d8c"
            ]
        ]
    },
    {
        "id": "9beccf8cd7e94a39",
        "type": "csv",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "once",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "timestamp, corriente, tension, potencia",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 590,
        "y": 960,
        "wires": [
            [
                "babe2602e12f0601"
            ]
        ]
    },
    {
        "id": "babe2602e12f0601",
        "type": "file",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "filename": "C:\\Users\\luish\\Downloads\\prueba curso.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 850,
        "y": 960,
        "wires": [
            [
                "beeaef6a2959f739"
            ]
        ]
    },
    {
        "id": "beeaef6a2959f739",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c94d23c582665353",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "Obtener formato timestamp",
        "func": "const fecha = new Date();\n\nconst anio = fecha.getFullYear();\nconst mes = ('0' + (fecha.getMonth() + 1)).slice(-2);\nconst dia = ('0' + (fecha.getDay()+15)).slice(-2);\nconst hora = ('0' + (fecha.getHours())).slice(-2);\nconst minuto = ('0' + (fecha.getMinutes())).slice(-2);\nconst segundo = ('0' + (fecha.getSeconds())).slice(-2);\n\nlet timestamp = anio + '-'+mes+'-' +dia+ '  ' + hora + ':' + minuto + ':' + segundo;\nflow.set(\"timestamp\", timestamp);\nmsg.payload = timestamp;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 900,
        "wires": [
            [
                "a660a85d242f9f28"
            ]
        ]
    },
    {
        "id": "7c512ba7e0f93671",
        "type": "inject",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 960,
        "wires": [
            [
                "4b2977d05bc03ebd"
            ]
        ]
    },
    {
        "id": "66b10abe78ab1012",
        "type": "inject",
        "z": "0cfef771f1ee3ea9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 900,
        "wires": [
            [
                "c94d23c582665353"
            ]
        ]
    },
    {
        "id": "a660a85d242f9f28",
        "type": "debug",
        "z": "0cfef771f1ee3ea9",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 900,
        "wires": []
    },
    {
        "id": "4b2977d05bc03ebd",
        "type": "function",
        "z": "0cfef771f1ee3ea9",
        "name": "function 21",
        "func": "let timestamp = flow.get(\"timestamp\");\nlet tension = flow.get(\"tension\");\nlet corriente = flow.get(\"corriente\");\nlet potencia = flow.get(\"potencia\");\n\nmsg.payload = [timestamp, tension, corriente, potencia]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 960,
        "wires": [
            [
                "9beccf8cd7e94a39"
            ]
        ]
    },
    {
        "id": "8fcd27a5b6aace37",
        "type": "link in",
        "z": "0cfef771f1ee3ea9",
        "name": "link in 4",
        "links": [
            "b2823663d15c98c6"
        ],
        "x": 245,
        "y": 1020,
        "wires": [
            [
                "4b2977d05bc03ebd"
            ]
        ]
    },
    {
        "id": "2e7b542da8bc8cdb",
        "type": "file in",
        "z": "4c109387e4051a53",
        "name": "",
        "filename": "I:\\Cursos\\trabajos casa.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 340,
        "y": 80,
        "wires": [
            [
                "880a928bc66b8a4a"
            ]
        ]
    },
    {
        "id": "326a0730591ac3e5",
        "type": "inject",
        "z": "4c109387e4051a53",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 80,
        "wires": [
            [
                "2e7b542da8bc8cdb"
            ]
        ]
    },
    {
        "id": "2f846a9a93502173",
        "type": "debug",
        "z": "4c109387e4051a53",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 80,
        "wires": []
    },
    {
        "id": "880a928bc66b8a4a",
        "type": "csv",
        "z": "4c109387e4051a53",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 570,
        "y": 80,
        "wires": [
            [
                "2f846a9a93502173",
                "bcb18c68312246af"
            ]
        ]
    },
    {
        "id": "bcb18c68312246af",
        "type": "function",
        "z": "4c109387e4051a53",
        "name": "function 13",
        "func": "flow.set(\"corriente_max\",msg.payload[0].corriente);\nfor(let i = 0; i< 12; i++){\n    if(flow.get(\"corriente_max\")<msg.payload[i].corriente){\n        flow.set(\"corriente_max\", msg.payload[i].corriente);}\n}\n\nmsg.payload = flow.get (\"corriente_max\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 200,
        "wires": [
            [
                "a9c607b68c4ad1e6"
            ]
        ]
    },
    {
        "id": "a9c607b68c4ad1e6",
        "type": "debug",
        "z": "4c109387e4051a53",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 200,
        "wires": []
    },
    {
        "id": "2da3ccf2217b0499",
        "type": "inject",
        "z": "4c109387e4051a53",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "00d04f9a8ffe615f",
        "type": "modbus-server",
        "z": "afe2f132f23e762b",
        "name": "Servisdor_NR",
        "logEnabled": false,
        "hostname": "192.168.1.14",
        "serverPort": 10502,
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": "10",
        "holdingBufferSize": "10",
        "inputBufferSize": "10",
        "discreteBufferSize": "10",
        "showErrors": false,
        "showStatusActivities": false,
        "x": 340,
        "y": 280,
        "wires": [
            [
                "01448da8b52d2f03"
            ],
            [
                "86ca5f52e3a4f9f1"
            ],
            [
                "65bafce84a3a1a45"
            ],
            [
                "c204d577c7e3c4c8"
            ],
            []
        ]
    },
    {
        "id": "0a1f18f9a09015c4",
        "type": "inject",
        "z": "afe2f132f23e762b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "00d04f9a8ffe615f"
            ]
        ]
    },
    {
        "id": "01448da8b52d2f03",
        "type": "debug",
        "z": "afe2f132f23e762b",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 180,
        "wires": []
    },
    {
        "id": "86ca5f52e3a4f9f1",
        "type": "debug",
        "z": "afe2f132f23e762b",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 220,
        "wires": []
    },
    {
        "id": "65bafce84a3a1a45",
        "type": "debug",
        "z": "afe2f132f23e762b",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 260,
        "wires": []
    },
    {
        "id": "c204d577c7e3c4c8",
        "type": "debug",
        "z": "afe2f132f23e762b",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 300,
        "wires": []
    },
    {
        "id": "1127fa894fc32286",
        "type": "mqtt in",
        "z": "626fd640a4a3adf4",
        "name": "",
        "topic": "prueba/curso/luis",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0af5ac84042856c1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "ecb777b9335b9fc5"
            ]
        ]
    },
    {
        "id": "ecb777b9335b9fc5",
        "type": "debug",
        "z": "626fd640a4a3adf4",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "a2776d0eba85e61b",
        "type": "mqtt out",
        "z": "626fd640a4a3adf4",
        "name": "",
        "topic": "prueba/curso/luis",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0af5ac84042856c1",
        "x": 510,
        "y": 200,
        "wires": []
    },
    {
        "id": "326a35d09dd0baae",
        "type": "inject",
        "z": "626fd640a4a3adf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hola esto es MQTT en node red",
        "payloadType": "str",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "a2776d0eba85e61b"
            ]
        ]
    },
    {
        "id": "4dc77bbfba08ff8d",
        "type": "inject",
        "z": "626fd640a4a3adf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "6f76616cec8565c6"
            ]
        ]
    },
    {
        "id": "6f76616cec8565c6",
        "type": "mqtt out",
        "z": "626fd640a4a3adf4",
        "name": "",
        "topic": "prueba/curso/coil1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0af5ac84042856c1",
        "x": 450,
        "y": 320,
        "wires": []
    },
    {
        "id": "b544d31275b822b2",
        "type": "modbus-write",
        "z": "626fd640a4a3adf4",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "f6902d71a09d8152",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 520,
        "y": 420,
        "wires": [
            [],
            [
                "c5c38e219f74f95f"
            ]
        ]
    },
    {
        "id": "2779522f93d905cb",
        "type": "mqtt in",
        "z": "626fd640a4a3adf4",
        "name": "",
        "topic": "prueba/curso/coil1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0af5ac84042856c1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 420,
        "wires": [
            [
                "b544d31275b822b2"
            ]
        ]
    },
    {
        "id": "c5c38e219f74f95f",
        "type": "debug",
        "z": "626fd640a4a3adf4",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 420,
        "wires": []
    },
    {
        "id": "500961284ea7a986",
        "type": "inject",
        "z": "626fd640a4a3adf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "6f76616cec8565c6"
            ]
        ]
    },
    {
        "id": "4ec805aafe7a128a",
        "type": "modbus-flex-getter",
        "z": "626fd640a4a3adf4",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 470,
        "y": 520,
        "wires": [
            [
                "4539c1eebbfa90c7"
            ],
            [
                "27004add1810c007"
            ]
        ]
    },
    {
        "id": "c26b2afc1be4b505",
        "type": "function",
        "z": "626fd640a4a3adf4",
        "name": "function 11",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 3, 'unitid': 1, \n    'address': 3774, \n    'quantity': 2\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 520,
        "wires": [
            [
                "4ec805aafe7a128a"
            ]
        ]
    },
    {
        "id": "202541e0f2f2e0a0",
        "type": "inject",
        "z": "626fd640a4a3adf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 520,
        "wires": [
            [
                "c26b2afc1be4b505"
            ]
        ]
    },
    {
        "id": "4539c1eebbfa90c7",
        "type": "debug",
        "z": "626fd640a4a3adf4",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 500,
        "wires": []
    },
    {
        "id": "27004add1810c007",
        "type": "function",
        "z": "626fd640a4a3adf4",
        "name": "function 12",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst value = buf.readFloatBE();\nmsg.payload =value.toFixed(2);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 580,
        "wires": [
            [
                "511f7d62ab62616e"
            ]
        ]
    },
    {
        "id": "511f7d62ab62616e",
        "type": "mqtt out",
        "z": "626fd640a4a3adf4",
        "name": "",
        "topic": "prueba/curso/medidor/tension",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0af5ac84042856c1",
        "x": 950,
        "y": 580,
        "wires": []
    },
    {
        "id": "dd23b3fed77ce8ec",
        "type": "file in",
        "z": "9c33afc00fb3e4cb",
        "name": "",
        "filename": "I:\\Cursos\\trabajos casa.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "1071bf4b025669d2"
            ]
        ]
    },
    {
        "id": "859f337705a22288",
        "type": "inject",
        "z": "9c33afc00fb3e4cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "dd23b3fed77ce8ec"
            ]
        ]
    },
    {
        "id": "9e7a5c3e24c759d7",
        "type": "debug",
        "z": "9c33afc00fb3e4cb",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 100,
        "wires": []
    },
    {
        "id": "1071bf4b025669d2",
        "type": "csv",
        "z": "9c33afc00fb3e4cb",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "9e7a5c3e24c759d7",
                "b7c0d9df7b0fc6c9"
            ]
        ]
    },
    {
        "id": "b7c0d9df7b0fc6c9",
        "type": "function",
        "z": "9c33afc00fb3e4cb",
        "name": "function 22",
        "func": "flow.set(\"corriente_max\",msg.payload[0].corriente);\nfor(let i = 0; i< 12; i++){\n    if(flow.get(\"corriente_max\")<msg.payload[i].corriente){\n        flow.set(\"corriente_max\", msg.payload[i].corriente);}\n}\n\nmsg.payload = flow.get (\"corriente_max\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "30e5374b9cc296a4",
                "0be987ecd2398a3b"
            ]
        ]
    },
    {
        "id": "30e5374b9cc296a4",
        "type": "debug",
        "z": "9c33afc00fb3e4cb",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 220,
        "wires": []
    },
    {
        "id": "183d27be10198d28",
        "type": "function",
        "z": "9c33afc00fb3e4cb",
        "name": "function 23",
        "func": "msg.payload = \"la corriente maxima es\" + \" \" +msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 460,
        "wires": [
            [
                "df80d2826c9fb73c"
            ]
        ]
    },
    {
        "id": "df80d2826c9fb73c",
        "type": "debug",
        "z": "9c33afc00fb3e4cb",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 460,
        "wires": []
    },
    {
        "id": "b2419b40f3530832",
        "type": "link in",
        "z": "9c33afc00fb3e4cb",
        "name": "link in 1",
        "links": [],
        "x": 215,
        "y": 460,
        "wires": [
            [
                "183d27be10198d28"
            ]
        ]
    },
    {
        "id": "0be987ecd2398a3b",
        "type": "link out",
        "z": "9c33afc00fb3e4cb",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 955,
        "y": 300,
        "wires": []
    },
    {
        "id": "b3f8c2f6fa1ee27d",
        "type": "link call",
        "z": "9c33afc00fb3e4cb",
        "name": "",
        "links": [
            "bf3081facfc41611"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 480,
        "y": 360,
        "wires": [
            [
                "c9c4b690c983eff8"
            ]
        ]
    },
    {
        "id": "bf3081facfc41611",
        "type": "link in",
        "z": "9c33afc00fb3e4cb",
        "name": "link in 3",
        "links": [],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "dd23b3fed77ce8ec"
            ]
        ]
    },
    {
        "id": "d274b9bb3d4e2d86",
        "type": "inject",
        "z": "9c33afc00fb3e4cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 360,
        "wires": [
            [
                "b3f8c2f6fa1ee27d"
            ]
        ]
    },
    {
        "id": "c9c4b690c983eff8",
        "type": "debug",
        "z": "9c33afc00fb3e4cb",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "930c9432d6dd1938",
        "type": "function",
        "z": "2725b16a011185cd",
        "name": "function 24",
        "func": "msg.payload = \"la corriente maxima es\" + \" \" +msg.payload + \" \"+ \"desde otro flow\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 180,
        "wires": [
            [
                "acc93122cdf6e6bf"
            ]
        ]
    },
    {
        "id": "acc93122cdf6e6bf",
        "type": "debug",
        "z": "2725b16a011185cd",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 180,
        "wires": []
    },
    {
        "id": "5bbbdb48e81fa7ef",
        "type": "link in",
        "z": "2725b16a011185cd",
        "name": "link in 2",
        "links": [],
        "x": 175,
        "y": 180,
        "wires": [
            [
                "930c9432d6dd1938"
            ]
        ]
    },
    {
        "id": "111922042aa37e25",
        "type": "delay",
        "z": "379e256af7151976",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "887fe6db11bbc263"
            ]
        ]
    },
    {
        "id": "d60c94cb147f3048",
        "type": "inject",
        "z": "379e256af7151976",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hola",
        "payloadType": "str",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "111922042aa37e25",
                "d8612d1a966719e1"
            ]
        ]
    },
    {
        "id": "887fe6db11bbc263",
        "type": "debug",
        "z": "379e256af7151976",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 180,
        "wires": []
    },
    {
        "id": "d8612d1a966719e1",
        "type": "debug",
        "z": "379e256af7151976",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 240,
        "wires": []
    },
    {
        "id": "03e0dcef2b9bd806",
        "type": "trigger",
        "z": "379e256af7151976",
        "name": "",
        "op1": "Comunicación exitosa",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 470,
        "y": 340,
        "wires": [
            [
                "b2823663d15c98c6"
            ]
        ]
    },
    {
        "id": "dd91d191ae6bc8f9",
        "type": "inject",
        "z": "379e256af7151976",
        "name": "Activar registro CSV",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "03e0dcef2b9bd806"
            ]
        ]
    },
    {
        "id": "7478cefe66caf38c",
        "type": "inject",
        "z": "379e256af7151976",
        "name": "Dtener registro CSV",
        "props": [
            {
                "p": "reset",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "03e0dcef2b9bd806"
            ]
        ]
    },
    {
        "id": "b2823663d15c98c6",
        "type": "link out",
        "z": "379e256af7151976",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "8fcd27a5b6aace37"
        ],
        "x": 745,
        "y": 340,
        "wires": []
    },
    {
        "id": "9f8d1a448e9f7d91",
        "type": "range",
        "z": "379e256af7151976",
        "minin": "4",
        "maxin": "20",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "property": "valor_real",
        "name": "",
        "x": 820,
        "y": 620,
        "wires": [
            [
                "9f5b54cf51601deb"
            ]
        ]
    },
    {
        "id": "f6f4dd3a6be546ed",
        "type": "modbus-flex-getter",
        "z": "379e256af7151976",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 450,
        "y": 500,
        "wires": [
            [
                "7002e8170db6ceb1"
            ],
            [
                "cf16de29db938dec"
            ]
        ]
    },
    {
        "id": "72c8fcbe59e566d0",
        "type": "function",
        "z": "379e256af7151976",
        "name": "function 29",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 3, 'unitid': 1, \n    'address': 512, \n    'quantity': 2\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 500,
        "wires": [
            [
                "f6f4dd3a6be546ed"
            ]
        ]
    },
    {
        "id": "33ac13633e97f848",
        "type": "inject",
        "z": "379e256af7151976",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 500,
        "wires": [
            [
                "72c8fcbe59e566d0"
            ]
        ]
    },
    {
        "id": "f58a5393a3875283",
        "type": "debug",
        "z": "379e256af7151976",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 560,
        "wires": []
    },
    {
        "id": "7002e8170db6ceb1",
        "type": "debug",
        "z": "379e256af7151976",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 480,
        "wires": []
    },
    {
        "id": "cf16de29db938dec",
        "type": "function",
        "z": "379e256af7151976",
        "name": "function 30",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst temp=buf[0];\nbuf[0] = buf[1];\nbuf[1] = temp;\nconst temp2 = buf[2];\nbuf[2] = buf[3];\nbuf[3] = temp2;\n\n\nconst value = buf.readFloatLE();\n\nmsg.valor_real = value;\nmsg.valor_real = value.toFixed(2);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 560,
        "wires": [
            [
                "f58a5393a3875283",
                "9f8d1a448e9f7d91"
            ]
        ]
    },
    {
        "id": "de508c2392748a6e",
        "type": "switch",
        "z": "379e256af7151976",
        "name": "",
        "property": "valor_real",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "20",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "20",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "20",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 390,
        "y": 760,
        "wires": [
            [
                "c5f35bf302d752ba"
            ],
            [
                "5cd516e42321896a"
            ],
            [
                "e7b723253828f71a"
            ]
        ]
    },
    {
        "id": "63f119a0f61c18ea",
        "type": "link in",
        "z": "379e256af7151976",
        "name": "link in 5",
        "links": [
            "9f5b54cf51601deb"
        ],
        "x": 235,
        "y": 720,
        "wires": [
            [
                "de508c2392748a6e"
            ]
        ]
    },
    {
        "id": "9f5b54cf51601deb",
        "type": "link out",
        "z": "379e256af7151976",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "63f119a0f61c18ea"
        ],
        "x": 995,
        "y": 620,
        "wires": []
    },
    {
        "id": "c5f35bf302d752ba",
        "type": "debug",
        "z": "379e256af7151976",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "valor_real",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 700,
        "wires": []
    },
    {
        "id": "5cd516e42321896a",
        "type": "debug",
        "z": "379e256af7151976",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "valor_real",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 740,
        "wires": []
    },
    {
        "id": "e7b723253828f71a",
        "type": "debug",
        "z": "379e256af7151976",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "valor_real",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 780,
        "wires": []
    },
    {
        "id": "238abf2994d47cf4",
        "type": "modbus-read",
        "z": "e261e132aec57fdf",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6001",
        "quantity": "16",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "3be7a93f5697df37"
            ],
            [
                "f7ad12806c86f153"
            ]
        ]
    },
    {
        "id": "3be7a93f5697df37",
        "type": "debug",
        "z": "e261e132aec57fdf",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "f7ad12806c86f153",
        "type": "debug",
        "z": "e261e132aec57fdf",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 180,
        "wires": []
    },
    {
        "id": "fdd529872cc2e733",
        "type": "inject",
        "z": "e261e132aec57fdf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "44508116c87d0f1e"
            ]
        ]
    },
    {
        "id": "44508116c87d0f1e",
        "type": "modbus-write",
        "z": "e261e132aec57fdf",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6001",
        "quantity": "1",
        "server": "f6902d71a09d8152",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 280,
        "y": 280,
        "wires": [
            [],
            [
                "45177548c2b2cc4d"
            ]
        ]
    },
    {
        "id": "45177548c2b2cc4d",
        "type": "debug",
        "z": "e261e132aec57fdf",
        "name": "debug 41",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 280,
        "wires": []
    },
    {
        "id": "d548b7fc727cfa87",
        "type": "inject",
        "z": "e261e132aec57fdf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 70,
        "y": 340,
        "wires": [
            [
                "44508116c87d0f1e"
            ]
        ]
    },
    {
        "id": "8409d22ba576c25f",
        "type": "modbus-flex-getter",
        "z": "e261e132aec57fdf",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 470,
        "y": 440,
        "wires": [
            [
                "d8132856ecd03282"
            ],
            [
                "b95d32c7915c03d1"
            ]
        ]
    },
    {
        "id": "24c8e54a5987a50d",
        "type": "function",
        "z": "e261e132aec57fdf",
        "name": "function 25",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 3, 'unitid': 1, \n    'address': 512, \n    'quantity': 2\n     }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 440,
        "wires": [
            [
                "8409d22ba576c25f"
            ]
        ]
    },
    {
        "id": "16fdf32151a11485",
        "type": "inject",
        "z": "e261e132aec57fdf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "24c8e54a5987a50d"
            ]
        ]
    },
    {
        "id": "1cc8ca9d3e4f8e76",
        "type": "debug",
        "z": "e261e132aec57fdf",
        "name": "debug 42",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 500,
        "wires": []
    },
    {
        "id": "d8132856ecd03282",
        "type": "debug",
        "z": "e261e132aec57fdf",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 420,
        "wires": []
    },
    {
        "id": "b95d32c7915c03d1",
        "type": "function",
        "z": "e261e132aec57fdf",
        "name": "function 26",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst temp=buf[0];\nbuf[0] = buf[1];\nbuf[1] = temp;\nconst temp2 = buf[2];\nbuf[2] = buf[3];\nbuf[3] = temp2;\n\n\nconst value = buf.readFloatLE();\n\nmsg.valor_real = value;\nmsg.valor_real = value.toFixed(2);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 500,
        "wires": [
            [
                "1cc8ca9d3e4f8e76",
                "9eab1ce3698d73c7"
            ]
        ]
    },
    {
        "id": "9eab1ce3698d73c7",
        "type": "debug",
        "z": "e261e132aec57fdf",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "valor_real",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 540,
        "wires": []
    },
    {
        "id": "77c84861242beaaa",
        "type": "modbus-flex-getter",
        "z": "e261e132aec57fdf",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f6902d71a09d8152",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 450,
        "y": 640,
        "wires": [
            [
                "cf3180773473b853"
            ],
            [
                "0447f71208ed832a"
            ]
        ]
    },
    {
        "id": "009373d2c461216f",
        "type": "function",
        "z": "e261e132aec57fdf",
        "name": "function 31",
        "func": "msg.payload = {\n    value: msg.payload,\n    'fc': 3, 'unitid': 1,\n    'address': 512,\n    'quantity': 2\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "77c84861242beaaa"
            ]
        ]
    },
    {
        "id": "75724ce3fc036790",
        "type": "inject",
        "z": "e261e132aec57fdf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "009373d2c461216f"
            ]
        ]
    },
    {
        "id": "cf3180773473b853",
        "type": "debug",
        "z": "e261e132aec57fdf",
        "name": "debug 52",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 620,
        "wires": []
    },
    {
        "id": "0447f71208ed832a",
        "type": "function",
        "z": "e261e132aec57fdf",
        "name": "function 32",
        "func": "const buf = Buffer.from(msg.payload.buffer);\n\nconst temp = buf[0];\nbuf[0] = buf[1];\nbuf[1] = temp;\nconst temp2 = buf[2];\nbuf[2] = buf[3];\nbuf[3] = temp2;\n\n\nconst value = buf.readFloatLE();\n\nmsg.valor_real = value;\nmsg.valor_real = value.toFixed(2);\nmsg.payload = msg.valor_real;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 700,
        "wires": [
            [
                "cee993663c30d528"
            ]
        ]
    },
    {
        "id": "cee993663c30d528",
        "type": "mqtt out",
        "z": "e261e132aec57fdf",
        "name": "",
        "topic": "prueba/curso/medidor/tension",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0af5ac84042856c1",
        "x": 930,
        "y": 700,
        "wires": []
    },
    {
        "id": "ea5267b40855a70b",
        "type": "inject",
        "z": "e1f826ba93e8c649",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "9dbaa34f134475a6"
            ]
        ]
    },
    {
        "id": "9dbaa34f134475a6",
        "type": "function",
        "z": "e1f826ba93e8c649",
        "name": "function 33",
        "func": "let home = env.get(\"HOMEPATH\");\nmsg.payload = home;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "e84caab6217644fc"
            ]
        ]
    },
    {
        "id": "e84caab6217644fc",
        "type": "debug",
        "z": "e1f826ba93e8c649",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "0fd0841fd355742a",
        "type": "subflow:a63f082dd65bb372",
        "z": "e1f826ba93e8c649",
        "name": "",
        "env": [
            {
                "name": "Function code",
                "value": "3",
                "type": "str"
            },
            {
                "name": "UnitD",
                "value": "1",
                "type": "str"
            },
            {
                "name": "Adress",
                "value": "512",
                "type": "str"
            },
            {
                "name": "Quantity",
                "value": "2",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 240,
        "wires": [
            [
                "4eacbb40a6756094"
            ]
        ]
    },
    {
        "id": "72e6411fd285391b",
        "type": "inject",
        "z": "e1f826ba93e8c649",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "0fd0841fd355742a"
            ]
        ]
    },
    {
        "id": "4eacbb40a6756094",
        "type": "debug",
        "z": "e1f826ba93e8c649",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "valor_real",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "5733e8c264f19993",
        "type": "e-mail",
        "z": "071916912d54373f",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "",
        "dname": "Enviar correo ",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "a540c8666b716423",
        "type": "inject",
        "z": "071916912d54373f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "06a91d742e2dc5d1"
            ]
        ]
    },
    {
        "id": "b8735a7352fd1bc3",
        "type": "function",
        "z": "071916912d54373f",
        "name": "Definir el contenido",
        "func": "msg.attachments =\n{\n    filename: \"prueba curso.csv\",\n    content: msg.payload\n};\n\nmsg.topic =  \"Esto es una prueba2\";\nmsg.payload = \"hola, te mando un saludo desde Node-Red\";\nmsg.to = global.get(\"correo_seleccionado\");\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "5733e8c264f19993"
            ]
        ]
    },
    {
        "id": "06a91d742e2dc5d1",
        "type": "file in",
        "z": "071916912d54373f",
        "name": "Buscar archivo CSV",
        "filename": "C:\\Users\\luish\\Downloads\\prueba curso.csv",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "b8735a7352fd1bc3"
            ]
        ]
    },
    {
        "id": "5b2222ca1e45b647",
        "type": "e-mail in",
        "z": "071916912d54373f",
        "name": "",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "required",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "auto",
        "inputs": 0,
        "x": 210,
        "y": 280,
        "wires": [
            [
                "cedadee658c0aea9"
            ]
        ]
    },
    {
        "id": "cedadee658c0aea9",
        "type": "switch",
        "z": "071916912d54373f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Enviar CSV",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "38c44a8a3dcdf74d"
            ]
        ]
    },
    {
        "id": "38c44a8a3dcdf74d",
        "type": "link out",
        "z": "071916912d54373f",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "356384025eee8f30"
        ],
        "x": 585,
        "y": 280,
        "wires": []
    },
    {
        "id": "356384025eee8f30",
        "type": "link in",
        "z": "071916912d54373f",
        "name": "link in 6",
        "links": [
            "38c44a8a3dcdf74d"
        ],
        "x": 105,
        "y": 220,
        "wires": [
            [
                "06a91d742e2dc5d1"
            ]
        ]
    },
    {
        "id": "28f30f511d422b1e",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "1aa4728872baf1e1",
        "name": "",
        "credtype": "account",
        "account": "b9fcabccfa99d4f5",
        "text": "Hola!Te escribo desde Node-Red",
        "phonenumbervalue": "",
        "apikeyvalue": "5200738",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "str",
        "rejectssl": false,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "0af595648f149f30"
            ]
        ]
    },
    {
        "id": "52373366cdfbcfc7",
        "type": "inject",
        "z": "1aa4728872baf1e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "28f30f511d422b1e"
            ]
        ]
    },
    {
        "id": "0af595648f149f30",
        "type": "debug",
        "z": "1aa4728872baf1e1",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 180,
        "wires": []
    }
]